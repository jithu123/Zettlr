/*!
 * BEGIN HEADER
 *
 * Contains:        Geometry CSS
 * CVM-Role:        Theme
 * Maintainer:      Hendrik Erz
 * License:         GNU GPL v3
 *
 * Description:     This file contains the main commands and style rules for the
 *                  geometry of the app itself. It sizes and frames the elements
 *                  but does not contain any colours or other styling elements.
 *                  These are located in the theme files.
 *
 *                  The aim of the geometry is that even without any theme all
 *                  elements are positioned correctly. Colouring is the only
 *                  thing that will at that point be missing.
 *
 * END HEADER
 */
@import "../../../node_modules/codemirror/lib/codemirror.css";
@font-face {
  font-family: 'WebHostingHub-Glyphs';
  src: url('../fonts/whh-font/webhostinghub-glyphs.eot');
  src: url('../fonts/whh-font/webhostinghub-glyphs.eot?#iefix') format('embedded-opentype'), url('../fonts/whh-font/webhostinghub-glyphs.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-Light.woff2') format('woff2');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-LightItalic.woff2') format('woff2');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-Heavy.woff2') format('woff2');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-HeavyItalic.woff2') format('woff2');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Roman.otf') format('otf');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Italic.otf') format('otf');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Bold.otf') format('otf');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-BoldItalic.otf') format('otf');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Regular.woff') format('woff');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Italic.woff') format('woff');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Bold.woff') format('woff');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-BoldItalic.woff') format('woff');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Inconsolata';
  src: url('../fonts/inconsolata/Inconsolata-Regular.otf') format('otf');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Inconsolata';
  src: url('../fonts/inconsolata/Inconsolata-Bold.otf') format('otf');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
* {
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 1em;
  cursor: default;
}
body {
  overflow: hidden;
  user-select: none;
}
body .dragger {
  cursor: default;
}
input:focus,
select:focus,
textarea:focus,
button:focus {
  outline: 0;
}
#container.blur {
  /* This is applied when a modal is shown */
}
::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-thumb {
  border-radius: 10px;
}
.clearfix {
  clear: both;
}
/**
 * Now the import directives to include the geometrical preconditions for all
 * elements.
 */
@keyframes soft-blink {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 1;
  }
  55% {
    opacity: 0;
  }
  85% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.modal {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  overflow-x: hidden;
  /* For longer settings(?) and stuff dialogs */
  overflow-y: auto;
}
.modal .dialog {
  margin: 0 15%;
  padding: 20px;
  /* Mock a <pre>-tag */
}
.modal .dialog h1 {
  font-size: 1.5em;
  margin-bottom: 1.5em;
}
.modal .dialog h1 small {
  font-size: 75%;
}
.modal .dialog span.uuid {
  display: block;
  margin-top: -3em;
  margin-bottom: 1em;
  font-size: 75%;
  user-select: text;
  cursor: text;
}
.modal .dialog h2,
.modal .dialog h3,
.modal .dialog h4,
.modal .dialog h5,
.modal .dialog h6 {
  margin-bottom: 1em;
}
.modal .dialog h2 small,
.modal .dialog h3 small,
.modal .dialog h4 small,
.modal .dialog h5 small,
.modal .dialog h6 small {
  font-size: 75%;
}
.modal .dialog p,
.modal .dialog li {
  line-height: 150%;
}
.modal .dialog ul,
.modal .dialog ol,
.modal .dialog p,
.modal .dialog li {
  margin-bottom: 0.5em;
}
.modal .dialog hr {
  border: none;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  width: 80%;
  margin: 1em 10%;
}
.modal .dialog img {
  max-width: 100%;
  max-height: 100%;
}
.modal .dialog img.image-preview {
  max-height: 50vh;
  display: block;
  margin: 0 auto;
}
.modal .dialog select#app-lang {
  width: 100%;
  margin-left: 0;
  margin-right: 0;
}
.modal .dialog label {
  margin: 1em 0.5em 0.5em 0em;
  display: block;
  cursor: pointer;
  display: inline;
}
.modal .dialog input {
  width: 100%;
  line-height: 150%;
  font-size: inherit;
  outline: none;
  padding: 2px 10px;
  margin-bottom: 1em;
}
.modal .dialog input.inline {
  width: auto;
  display: inline-block;
  margin-bottom: 0;
}
.modal .dialog input.time {
  width: 70px;
  text-align: center;
}
.modal .dialog span.info {
  display: block;
  margin-top: 0em;
  margin-bottom: 1em;
  font-size: 80%;
  line-height: 100%;
}
.modal .dialog input:not(.inline) ~ span.info {
  margin-top: -1em;
}
.modal .dialog select {
  line-height: 200%;
  font-size: inherit;
  padding: 0.5em;
  margin: 0.5em;
}
.modal .dialog input[type="checkbox"],
.modal .dialog input[type="radio"] {
  margin: 0.5em;
  display: inline;
}
.modal .dialog textarea {
  font-size: inherit;
  width: 100%;
  padding: 1em;
  border-radius: 3px;
}
.modal .dialog button,
.modal .dialog a.button {
  display: inline-block;
  font-size: 1em;
  margin: 1em;
  padding: 0.5em 1em;
  cursor: pointer;
  text-decoration: none;
}
.modal .dialog div.input-button-group {
  display: flex;
  margin-bottom: 1em;
}
.modal .dialog div.input-button-group input {
  flex: 0 5 auto;
  margin: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.modal .dialog div.input-button-group button {
  flex: 0 1 auto;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin: 0;
  display: inline-flex;
}
.modal .dialog button.icon {
  display: inline-flex;
  vertical-align: bottom;
  min-height: 28px;
}
.modal .dialog .changelog,
.modal .dialog .code {
  max-height: 300px;
  overflow-y: auto;
  border-radius: 2px;
  padding: 10px;
  margin: 10px 0px;
  user-select: text;
}
.modal .dialog .code {
  white-space: pre;
  font-family: 'Liberation Mono', monospace;
  user-select: text;
}
.modal .dialog div.clear {
  clear: both;
}
.modal .dialog div.box-left,
.modal .dialog div.box-right {
  width: 100%;
  padding: 2%;
}
.modal .dialog .modal-container-constrain-size {
  max-height: 50vh;
  overflow-y: auto;
}
@media (min-width: 800px) {
  .modal .dialog div.box-left,
  .modal .dialog div.box-right {
    width: 50%;
  }
  .modal .dialog div.box-left {
    float: left;
  }
  .modal .dialog div.box-right {
    float: right;
  }
}
.modal .dialog div.paper {
  position: relative;
}
.modal .dialog div.paper.a4paper {
  width: 5em;
  height: 7em;
  margin: 1em auto;
  border: 1px solid black;
}
.modal .dialog div.paper input[type="number"] {
  text-align: center;
  width: 4em;
}
.modal .dialog div.paper input[type="number"]::-webkit-inner-spin-button,
.modal .dialog div.paper input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.modal .dialog div.paper .tmargin,
.modal .dialog div.paper .rmargin,
.modal .dialog div.paper .bmargin,
.modal .dialog div.paper .lmargin {
  position: absolute;
}
.modal .dialog div.paper .tmargin {
  top: -2em;
  margin: 0 0.5em;
}
.modal .dialog div.paper .rmargin {
  right: -4.1em;
  top: 2.5em;
}
.modal .dialog div.paper .bmargin {
  bottom: -2em;
  margin: 0 0.5em;
}
.modal .dialog div.paper .lmargin {
  left: -4.2em;
  top: 2.5em;
}
.modal .dialog div.image-size {
  position: relative;
  height: 9em;
  width: 8em;
  margin: 0 auto;
}
.modal .dialog div.image-size .image {
  width: 6em;
  height: 6em;
  position: absolute;
  top: 0;
  left: 0;
  background-image: url("../img/image-preview.png");
  background-size: contain;
}
.modal .dialog div.image-size #imageWidth {
  width: 6em;
  position: absolute;
  bottom: 10px;
}
.modal .dialog div.image-size #imageHeight {
  width: 6em;
  transform: rotateZ(-90deg);
  position: absolute;
  top: 2.5em;
  left: 4em;
}
.modal .dialog div.image-size #preview-image-sizes {
  display: block;
  position: absolute;
  bottom: 0px;
  left: 1em;
  font-weight: bold;
}
.modal .dialog .pdf-preview {
  max-height: 100%;
  overflow-y: auto;
}
.modal .dialog .error {
  border-radius: 5px;
  margin: 0.5em;
  padding: 1em;
}
.modal .dialog div#prefs-taglist div {
  display: flex;
}
.modal .dialog div#prefs-taglist div input,
.modal .dialog div#prefs-taglist div button {
  flex: 5;
  display: inline;
  margin: 0.5em;
}
.modal .dialog div#prefs-taglist div input[type="color"] {
  flex: 1;
}
.modal .dialog div#prefs-taglist div button {
  flex: 1;
}
.modal .dialog .projects {
  display: flex;
}
.modal .dialog .projects .flex {
  flex: 1;
  padding: 1em;
}
.modal .dialog .projects .flex img {
  width: 100%;
  max-height: 100%;
}
.modal .dialog .ui-tabs-nav {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
  margin-bottom: 20px;
}
.modal .dialog .ui-tabs-nav .ui-tabs-tab {
  flex: 1;
  display: inline-block;
  line-height: 200%;
  list-style-type: none;
  margin-bottom: 0;
  padding: 0 6px;
}
.modal .dialog .ui-tabs-nav .ui-tabs-tab a {
  text-decoration: none;
  display: inline-block;
  width: 100%;
  text-align: center;
  outline: none;
  white-space: nowrap;
}
.modal .dialog ul.dicts-list {
  list-style-type: none;
  max-height: 300px;
  overflow-y: auto;
}
.modal .dialog ul.dicts-list li.dicts-list-item {
  display: block;
  cursor: pointer;
  line-height: 1.5em;
  margin: 0;
  padding: 5px;
}
.modal .dialog ul.user-dict {
  list-style-type: none;
  max-height: 300px;
  overflow-y: auto;
}
.modal .dialog ul.user-dict li.user-dict-item {
  display: flex;
  align-items: center;
  cursor: pointer;
  margin: 0;
  padding: 5px;
}
.modal .dialog ul.user-dict li.user-dict-item span {
  flex: 1 0 auto;
}
.modal .dialog ul.user-dict li.user-dict-item clr-icon {
  flex: 0 1 auto;
}
.modal .dialog input.dicts-list-search {
  line-height: 200%;
}
.modal .dialog .selected-dict {
  display: inline-block;
}
.modal .dialog .tag clr-icon {
  vertical-align: text-bottom;
}
#file-list {
  position: absolute;
  top: 0;
  left: 0%;
  bottom: 0;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  outline: none;
  transition: 0.3s left ease;
}
#file-list.hidden {
  left: 100%;
}
#file-list div.list-item {
  overflow: hidden;
  line-height: 30px;
  padding-left: 6px;
  position: relative;
  /* Taglist stuff */
}
#file-list div.list-item div.meta {
  white-space: nowrap;
  height: 30px;
  line-height: inherit;
}
#file-list div.list-item div.meta .date,
#file-list div.list-item div.meta .id,
#file-list div.list-item div.meta .tags,
#file-list div.list-item div.meta .tex-indicator,
#file-list div.list-item div.meta .directories,
#file-list div.list-item div.meta .files {
  font-size: 75%;
  border-radius: 4px;
  padding: 2px 4px;
  margin-right: 4px;
}
#file-list div.list-item div.meta .target-progress-indicator {
  vertical-align: middle;
  margin: 0 4px;
  transform: rotateZ(-90deg);
}
#file-list div.list-item p.filename {
  white-space: nowrap;
  display: block;
  line-height: 30px;
  width: 100%;
  overflow: hidden;
}
#file-list div.list-item .taglist {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 10px;
  display: flex;
  align-items: center;
  width: 25px;
  justify-content: space-between;
  transition: 0.2s width ease;
}
#file-list div.list-item .taglist .tag {
  height: 25px;
  width: auto;
  margin: 0 auto;
  transition: 0.2s all ease-out;
}
#file-list div.list-item .taglist:hover {
  width: 100%;
  right: 0;
  transition: 0.2s width ease;
}
#file-list div.list-item .taglist:hover .tag {
  width: 25px;
  border-radius: 12.5px;
  transition: 0.2s all ease-in;
}
#file-list div.list-item .taglist .tagspacer {
  flex-grow: 1;
  text-align: center;
  overflow: hidden;
}
#file-list div.list-item .taglist .tagspacer .tag {
  border-top: 2px solid white;
  border-bottom: 2px solid white;
}
#file-list div.list-item .taglist .tagspacer:only-child .tag {
  width: 25px;
  border-radius: 12.5px;
}
#file-list div.list-item .taglist .tagspacer:first-child .tag {
  border-top-left-radius: 12.5px;
  border-bottom-left-radius: 12.5px;
  border-left: 2px solid white;
}
#file-list div.list-item .taglist .tagspacer:last-child .tag {
  border-top-right-radius: 12.5px;
  border-bottom-right-radius: 12.5px;
  border-right: 2px solid white;
}
#file-list div.list-item.directory {
  white-space: nowrap;
}
#file-list div.list-item.directory .sorter {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  text-align: right;
  margin: 0;
}
#file-list div.list-item.directory .sorter .sortDirection,
#file-list div.list-item.directory .sorter .sortType {
  display: inline-block;
  margin: 3px;
}
#file-list .empty-file-list,
#file-list .empty-directory {
  display: block;
  text-align: center;
  padding: 10px;
  margin-top: 50%;
  font-weight: bold;
  font-size: 200%;
}
#file-tree {
  position: absolute;
  top: 0;
  left: 0%;
  width: 100%;
  bottom: 0;
  overflow-y: auto;
  outline: none;
  transition: 0.3s left ease;
}
#file-tree.hidden {
  left: -100%;
}
#file-tree #directories-dirs-header,
#file-tree #directories-files-header {
  height: 1.6em;
  vertical-align: bottom;
  margin-top: 0.8em;
}
#file-tree #directories-dirs-header clr-icon,
#file-tree #directories-files-header clr-icon {
  width: 12px;
  height: 12px;
  margin-left: 3px;
  margin-right: 3px;
  vertical-align: bottom;
}
#file-tree .filename {
  line-height: 1.6em;
  padding: 0.1em 0.4em;
  white-space: nowrap;
  padding-left: 5px;
  margin: 5px 0px;
  overflow: hidden;
}
#file-tree .filename .item-icon,
#file-tree .filename .toggle-icon {
  display: inline-block;
  width: 18px;
}
#file-tree .list-item {
  position: relative;
}
#file-tree .list-item.directory .sorter {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
}
#file-tree .list-item.directory .sorter .sortDirection,
#file-tree .list-item.directory .sorter .sortType {
  margin: 5px 3px;
}
#file-tree .empty-tree {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  text-align: center;
  cursor: pointer;
}
#file-tree .empty-tree .info {
  display: block;
  padding: 10px;
  margin-top: 50%;
  font-weight: bold;
  font-size: 200%;
}
#sidebar {
  position: fixed;
  top: 39px;
  left: 0;
  width: 20%;
  bottom: 0;
}
#sidebar #component-container {
  position: absolute;
  overflow-x: hidden;
  width: 100%;
  height: 100%;
}
#sidebar.expanded #file-tree,
#sidebar.expanded #file-list {
  width: 50%;
}
#sidebar.expanded #file-list {
  left: 50%;
}
#sidebar.expanded #file-list.hidden {
  left: 50%;
}
#sidebar.expanded #file-tree {
  left: 0%;
}
#sidebar.expanded #file-tree.hidden {
  left: 0%;
}
#sidebar #arrow-button {
  line-height: 25px;
  text-align: center;
  vertical-align: middle;
  z-index: 400;
  position: absolute;
  top: 10px;
  left: 10px;
  width: 30px;
  height: 30px;
  transition: 0.4s left ease;
}
#sidebar #arrow-button.hidden {
  left: -60px;
}
#sidebar #sidebar-resize,
#sidebar #sidebar-inner-resizer {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 10px;
  right: -10px;
  padding: 2px;
  cursor: ew-resize;
}
#sidebar #sidebar-resize::after,
#sidebar #sidebar-inner-resizer::after {
  content: "";
  position: absolute;
  width: 6px;
  height: calc(100% - 4px);
}
#sidebar #sidebar-resize::after,
#sidebar #sidebar-inner-resizer::after {
  border-radius: 10px;
  transition: 0.4s all ease;
}
#sidebar #sidebar-resize:hover::after,
#sidebar #sidebar-inner-resizer:hover::after {
  background-color: rgba(0, 0, 0, 0.4);
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
#sidebar #sidebar-inner-resizer {
  left: calc(50% - 5px);
  right: auto;
}
#editor {
  position: fixed;
  top: 39px;
  right: 0;
  bottom: 0;
  left: calc(20% + 10px);
  overflow-x: hidden;
  overflow-y: auto;
}
#editor.fullscreen {
  left: 0%;
  padding-left: 0px;
}
#editor.fullscreen #document-tabs {
  display: none;
}
#editor .ui-resizable-handle {
  position: absolute;
  font-size: 0.1px;
  display: block;
}
#editor .ui-resizable-disabled .ui-resizable-handle,
#editor .ui-resizable-autohide .ui-resizable-handle {
  display: none;
}
#editor .ui-resizable-w {
  cursor: ew-resize;
  width: 10px;
  left: 0px;
  top: 0;
  height: 100%;
  padding: 2px;
}
#editor .ui-resizable-w::after {
  content: "";
  position: absolute;
  width: 6px;
  height: calc(100% - 4px);
}
#editor .CodeMirror {
  height: calc(100% - 25px);
  margin-top: 25px;
  margin-left: 0.5em;
  cursor: text;
  font-family: inherit;
}
@media (min-width: 1025px) {
  #editor .CodeMirror {
    margin-left: 100px;
  }
}
@media (max-width: 1024px) {
  #editor .CodeMirror {
    margin-left: 50px;
  }
}
@media (max-width: 900px) {
  #editor .CodeMirror {
    margin-left: 20px;
  }
}
#editor .CodeMirror-code {
  margin: 5em 0em;
}
@media (max-width: 1024px) {
  #editor .CodeMirror-code {
    margin: 100px 0em;
  }
}
#editor .CodeMirror-code .mute {
  opacity: 0.2;
}
#editor .CodeMirror-scroll {
  padding-right: 5em;
  overflow-x: hidden !important;
  margin-bottom: 0px;
  padding-bottom: 0px;
}
@media (min-width: 1025px) {
  #editor .CodeMirror-scroll {
    padding-right: 100px;
  }
}
@media (max-width: 1024px) {
  #editor .CodeMirror-scroll {
    padding-right: 50px;
  }
}
@media (max-width: 900px) {
  #editor .CodeMirror-scroll {
    padding-right: 20px;
  }
}
#editor .katex {
  font-size: 1.1em;
}
.CodeMirror-fullscreen {
  position: fixed !important;
  margin-top: 0px !important;
  top: 39px;
  left: 0;
  right: 0;
  bottom: 0;
  height: auto;
  z-index: 500;
}
@media (min-width: 1301px) {
  .CodeMirror-fullscreen {
    margin-left: 350px !important;
  }
}
@media (max-width: 1300px) {
  .CodeMirror-fullscreen {
    margin-left: 200px !important;
  }
}
@media (max-width: 1100px) {
  .CodeMirror-fullscreen {
    margin-left: 150px !important;
  }
}
@media (max-width: 1000px) {
  .CodeMirror-fullscreen {
    margin-left: 100px !important;
  }
}
@media (max-width: 800px) {
  .CodeMirror-fullscreen {
    margin-left: 50px !important;
  }
}
@media (min-width: 1301px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 350px !important;
  }
}
@media (max-width: 1300px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 200px !important;
  }
}
@media (max-width: 1100px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 150px !important;
  }
}
@media (max-width: 1000px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 100px !important;
  }
}
@media (max-width: 800px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 50px !important;
  }
}
.cm-readability-0 {
  background-color: #81f249;
  color: #444444 !important;
}
.cm-readability-1 {
  background-color: #9df249;
  color: #444444 !important;
}
.cm-readability-2 {
  background-color: #baf249;
  color: #444444 !important;
}
.cm-readability-3 {
  background-color: #d6f249;
  color: #444444 !important;
}
.cm-readability-4 {
  background-color: #f2f249;
  color: #444444 !important;
}
.cm-readability-5 {
  background-color: #f2d649;
  color: #444444 !important;
}
.cm-readability-6 {
  background-color: #f2ba49;
  color: #444444 !important;
}
.cm-readability-7 {
  background-color: #f29d49;
  color: #444444 !important;
}
.cm-readability-8 {
  background-color: #f26549;
  color: #444444 !important;
}
.cm-readability-9 {
  background-color: #f24949;
  color: #444444 !important;
}
.cm-readability-10 {
  background-color: #f24965;
  color: #444444 !important;
}
#document-tabs {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 25px;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  flex-shrink: 0;
  overflow-x: auto;
}
#document-tabs::-webkit-scrollbar {
  display: none;
}
#document-tabs .no-files {
  flex-grow: 1;
  position: relative;
  line-height: 25px;
  text-align: center;
}
#document-tabs .document {
  flex-grow: 1;
  position: relative;
  min-width: 200px;
  line-height: 25px;
  overflow: hidden;
  padding-right: 25px;
}
#document-tabs .document .filename {
  white-space: nowrap;
  overflow-x: hidden;
  display: inline-block;
  position: absolute;
  left: 0px;
  top: 0px;
  right: 25px;
  padding-left: 2px;
}
#document-tabs .document.modified .filename::before {
  content: '* ';
}
#document-tabs .document .close {
  position: absolute;
  right: 0px;
  top: 0px;
  width: 25px;
  height: 25px;
  line-height: 25px;
  text-align: center;
  border-radius: 25px;
  display: inline-block;
}
.CodeMirror-vscrollbar {
  cursor: default;
}
.CodeMirror {
  line-height: 1.4375;
  user-select: text;
  background-color: inherit;
  /* Implement a "fat" cursor for Windows' overwrite mode (Ins key) */
  /* Make the formatting characters and escape sequences nearly invisible */
}
.CodeMirror.CodeMirror-wrap > div:first-child textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  height: 1.4375em !important;
  bottom: -1.4375em !important;
  transform: scaleY(1.1);
}
.CodeMirror .CodeMirror-sizer {
  height: 100%;
}
.CodeMirror.CodeMirror-empty {
  background-image: url('../img/feather.svg');
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
  padding-top: 5em;
}
.CodeMirror pre {
  padding: 0;
}
.CodeMirror input[type="checkbox"] {
  transform: scale(1.2);
  margin: 0.2em;
  vertical-align: middle;
}
.CodeMirror .search-result {
  background-color: yellow !important;
  color: black !important;
  border-radius: 0px !important;
  padding-right: 0px !important;
}
.CodeMirror .cm-table {
  font-family: 'Liberation Mono', monospace;
  font-weight: bold;
}
.CodeMirror .size-header-1 {
  font-size: 2em;
}
.CodeMirror .size-header-1 .CodeMirror-gutter-elt {
  line-height: 1.5em;
}
.CodeMirror .size-header-2 {
  font-size: 1.8em;
}
.CodeMirror .size-header-2 .CodeMirror-gutter-elt {
  line-height: 1.5em;
}
.CodeMirror .size-header-3 {
  font-size: 1.5em;
}
.CodeMirror .size-header-3 .CodeMirror-gutter-elt {
  line-height: 1.4em;
}
.CodeMirror .size-header-4 {
  font-size: 1.3em;
}
.CodeMirror .size-header-4 .CodeMirror-gutter-elt {
  line-height: 1.3em;
}
.CodeMirror .size-header-5 {
  font-size: 1em;
}
.CodeMirror .size-header-6 {
  font-size: 1em;
}
.CodeMirror .cm-comment,
.CodeMirror .cm-formatting-task,
.CodeMirror .cm-fenced-code {
  font-family: 'Liberation Mono', monospace;
}
.CodeMirror .CodeMirror-cursor {
  width: 2px;
  border: 0;
  z-index: 1;
  animation: soft-blink 1s infinite;
}
.CodeMirror .CodeMirror-overwrite .CodeMirror-cursor,
.CodeMirror.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border-top: 2px solid #333;
  border-bottom: 2px solid #333;
  background-color: rgba(0, 0, 0, 0.25);
}
.CodeMirror .cm-formatting-code,
.CodeMirror .cm-formatting-code-block,
.CodeMirror .cm-formatting-quote,
.CodeMirror .cm-formatting-strong,
.CodeMirror .cm-formatting-em,
.CodeMirror .cm-zkn-link-formatting,
.CodeMirror .cm-escape-char {
  opacity: 0.3;
}
.CodeMirror .cm-formatting-quote,
.CodeMirror .cm-formatting-list-ul,
.CodeMirror .cm-formatting-list-ol {
  font-family: 'Liberation Mono', monospace;
}
.CodeMirror #measureWidth {
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
  white-space: nowrap;
}
.CodeMirror #measureMonoWidth {
  font-family: 'Liberation Mono', monospace;
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
  white-space: nowrap;
}
.CodeMirror .cm-tab {
  display: inline;
}
.CodeMirror .cm-url,
.CodeMirror .cm-link {
  text-decoration: none;
}
.CodeMirror .cm-zkn-tag.meta-key,
.CodeMirror .cm-zkn-link.meta-key,
.CodeMirror .cma.meta-key {
  cursor: pointer;
}
.CodeMirror .cm-zkn-tag.meta-key:hover,
.CodeMirror .cm-zkn-link.meta-key:hover,
.CodeMirror a.cma {
  text-decoration: underline;
}
.CodeMirror .cm-zkn-tag {
  font-weight: bold;
}
.CodeMirror .CodeMirror-gutters {
  background-color: transparent;
  border: none;
  width: 2em;
  padding-right: 10px;
}
.CodeMirror .CodeMirror-foldgutter {
  width: 2em;
}
.CodeMirror .CodeMirror-foldgutter-open,
.CodeMirror .CodeMirror-foldgutter-folded {
  text-align: right;
  cursor: pointer;
  font-size: 18px;
}
.CodeMirror .CodeMirror-foldgutter-open:hover,
.CodeMirror .CodeMirror-foldgutter-folded:hover {
  color: var(--c-primary);
}
.CodeMirror .CodeMirror-foldgutter-open:after {
  content: "\25BE";
}
.CodeMirror .CodeMirror-foldgutter-folded:after {
  content: "\25B8";
}
.CodeMirror .CodeMirror-foldmarker {
  border-radius: 3px;
  display: inline-block;
  font-size: 75%;
  margin-left: 10px;
  padding: 2px;
  cursor: pointer;
  vertical-align: baseline;
}
.heading-tag {
  display: inline-block;
  cursor: pointer;
  border-radius: 3px;
  padding: 0 4px;
}
.heading-tag span {
  font-size: 20px;
  font-weight: normal;
}
.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;
  margin: 0;
  padding: 0px;
  max-height: 20em;
  overflow-y: auto;
}
.CodeMirror-hints li.CodeMirror-hint {
  margin: 0;
  white-space: pre;
  cursor: pointer;
  padding: 5px;
  line-height: 150%;
}
.CodeMirror-hints .cm-hint-colour {
  font-weight: bold;
}
.quicklook-standalone,
.print-window {
  position: fixed;
}
.quicklook-standalone .title,
.print-window .title {
  cursor: -webkit-grab;
  -webkit-app-region: drag;
  height: 39px;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  display: flex;
  padding: 0;
  margin: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}
.quicklook-standalone .title h1,
.print-window .title h1 {
  flex-grow: 5;
  display: inline-block;
  padding: 0 1em;
  line-height: 39px;
  white-space: nowrap;
  max-width: 90%;
  overflow: hidden;
}
.quicklook-standalone .title .find,
.print-window .title .find {
  -webkit-app-region: no-drag;
  flex-grow: 4;
  display: inline-block;
  width: 30%;
  float: right;
  height: 100%;
  padding: 0;
  margin: 0;
}
.quicklook-standalone .title .find input,
.print-window .title .find input {
  width: 100%;
  padding: 0.2em 1em;
  margin: 0;
  outline: none;
  border: none;
  height: 100%;
  line-height: 39px;
}
.quicklook-standalone #init-print,
.print-window #init-print {
  padding: 15.6px;
  cursor: pointer;
  -webkit-app-region: no-drag;
  width: 20px;
  height: 39px;
}
.quicklook-standalone .body .CodeMirror,
.print-window .body .CodeMirror {
  cursor: text;
  font-size: 1em;
  font-family: inherit;
  padding: 0.3em;
  height: 100%;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}
.quicklook-standalone .CodeMirror-scroll .CodeMirror-sizer,
.print-window .CodeMirror-scroll .CodeMirror-sizer {
  margin-bottom: 1em;
}
.quicklook-standalone .quicklook-standalone #editor,
.print-window .quicklook-standalone #editor {
  top: 39px;
}
.quicklook-standalone .print-window .content,
.print-window .print-window .content {
  top: 39px;
  width: 100%;
  height: 100%;
}
body.darwin .quicklook-standalone .title,
body.darwin .print-window .title {
  padding-left: 70px;
}
body.win32 .quicklook-standalone .title,
body.win32 .print-window .title {
  padding-right: 140px;
}
body.linux .quicklook-standalone .title,
body.linux .print-window .title {
  padding-right: 100px;
}
#toolbar {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 39px;
  padding: 0;
  display: flex;
  align-items: center;
  -webkit-app-region: drag;
}
#toolbar > .searchbar,
#toolbar > .file-info,
#toolbar > .button,
#toolbar > svg:not(#search-progress-indicator) {
  -webkit-app-region: no-drag;
}
#toolbar > .searchbar:focus,
#toolbar > .file-info:focus,
#toolbar > .button:focus,
#toolbar > svg:not(#search-progress-indicator):focus {
  outline: 0;
}
#toolbar .button {
  flex-grow: 0.1;
  outline: 0;
  display: inline-block;
  width: 29px;
  height: 29px;
  margin: 5px;
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#toolbar .button clr-icon {
  width: 21px;
  height: 21px;
}
#toolbar .button:first-child {
  margin-left: 10px;
}
#toolbar .button:last-child {
  margin-right: 10px;
}
#toolbar .button.pomodoro {
  padding: 2px;
  background-image: none;
  border: none;
}
#toolbar .button.pomodoro svg {
  transform: rotate(-90deg);
  display: inherit;
  margin: 0 auto;
}
#toolbar .spacer {
  flex-grow: 5;
}
#toolbar .separator {
  flex-grow: 0.3;
  width: 1px;
  text-align: center;
}
#toolbar .separator:before {
  content: "|";
  display: inline;
  font-size: 1.2em;
}
#toolbar .file-info {
  flex-grow: 5;
  text-align: center;
  line-height: 39px;
  white-space: nowrap;
  line-height: 1em;
}
#toolbar .searchbar {
  position: relative;
  flex-grow: 5;
}
#toolbar .searchbar input {
  height: 29px;
  width: 90%;
  line-height: 29px;
  padding: 0.2em 1em;
  margin: 5px;
  border-radius: 5px;
  outline: none;
}
#toolbar .searchbar div.end-search {
  position: absolute;
  top: 5px;
  right: 34px;
  height: 29px;
  width: 29px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 80%;
}
#toolbar .searchbar div.end-search:hover {
  color: var(--c-primary);
}
body.darwin #toolbar {
  padding-left: 70px;
}
body.win32 #toolbar,
body.linux #toolbar {
  padding-right: 140px;
}
.notify {
  position: fixed;
  display: block;
  right: 15px;
  margin: 0;
  padding: 10px;
  width: 300px;
  overflow: hidden;
  cursor: default;
}
/* * * * * * * * * * * * * *
 *                         *
 *   BEGIN VARIABLES AREA  *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *    END VARIABLES AREA   *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *     BEGIN MIXIN AREA    *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *      END MIXIN AREA     *
 *                         *
 * * * * * * * * * * * * * */
.popup-arrow {
  width: 0;
  height: 0;
  position: fixed;
}
.popup-arrow.up {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom-width: 5px;
  border-bottom-style: solid;
}
.popup-arrow.down {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top-width: 5px;
  border-top-style: solid;
}
.popup-arrow.left {
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-right-width: 5px;
  border-right-style: solid;
}
.popup-arrow.right {
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left-width: 5px;
  border-left-style: solid;
}
.popup {
  position: fixed;
  max-width: 350px;
  max-height: 600px;
  overflow-y: auto;
  overflow-x: hidden;
}
.popup a.toc-link {
  text-decoration: none;
  display: block;
  line-height: 150%;
  padding: 4px;
  overflow-x: hidden;
  white-space: nowrap;
}
.popup p {
  margin: 10px;
  text-align: center;
}
.popup table {
  vertical-align: middle;
}
.popup table td {
  padding: 4px;
}
.popup button {
  border: none;
  font-size: 200%;
  width: 100%;
  padding: 10px;
  display: block;
  text-align: center;
}
.popup form input {
  padding: 5px;
  font-size: 200%;
  display: block;
  border: none;
  width: 100%;
  text-align: center;
}
.popup form input:focus {
  outline: 0;
}
.popup form input.small {
  font-size: 140%;
  text-align: left;
  width: 350px;
}
.popup form input[type="checkbox"] {
  display: inline-block;
  margin: 5px;
  width: auto;
}
.popup form label {
  display: inline-block;
  margin: 5px;
}
.popup .row {
  display: flex;
}
.popup .table-generator {
  padding: 5px;
}
.popup .table-generator .row .cell {
  flex-grow: 1;
  width: 10px;
  height: 10px;
  margin: 1px;
}
.popup .btn-share {
  flex-grow: 1;
  width: 46px;
  height: 46px;
  line-height: 46px;
  text-align: center;
  transition: 0.2s all ease;
  cursor: default;
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
}
.popup .btn-share.htm {
  background-image: url('../img/html5.svg');
}
.popup .btn-share.htm:hover {
  /* W3C color code */
  background-color: #4eaf57;
}
.popup .btn-share.pdf {
  background-image: url('../img/pdf.svg');
}
.popup .btn-share.pdf:hover {
  /* Adobe reader PDF color code */
  background-color: #fd5e4d;
}
.popup .btn-share.docx {
  background-image: url('../img/docx.svg');
}
.popup .btn-share.docx:hover {
  /* MS Word color code */
  background-color: #396fbe;
}
.popup .btn-share.odt {
  background-image: url('../img/odt.svg');
}
.popup .btn-share.odt,
.popup .btn-share.tex,
.popup .btn-share.plain {
  color: #141414;
}
.popup .btn-share.odt:hover,
.popup .btn-share.tex:hover,
.popup .btn-share.plain:hover {
  background-color: #dcdcdc;
  color: black;
}
.popup .btn-share.revealjs {
  color: #787878;
}
.popup .btn-share.revealjs:hover {
  background-color: #282828;
  color: white;
}
.popup .btn-share.revealjs-beige {
  color: #333333;
  background-color: #f7f2d3;
}
.popup .btn-share.revealjs-beige:hover {
  background-color: #e7d87d;
  color: #333333;
}
.popup .btn-share.revealjs-black {
  color: #ffffff;
  background-color: #222222;
}
.popup .btn-share.revealjs-black:hover {
  background-color: #555555;
  color: #ffffff;
}
.popup .btn-share.revealjs-league {
  color: #71e9f4;
  background-color: #555a5f;
}
.popup .btn-share.revealjs-league:hover {
  background-color: #878d93;
  color: #d0f8fb;
}
.popup .btn-share.revealjs-moon {
  color: #268bd2;
  background-color: #002b36;
}
.popup .btn-share.revealjs-moon:hover {
  background-color: #007c9c;
  color: #78b9e6;
}
.popup .btn-share.revealjs-serif {
  color: #383d3d;
  background-color: #f0f1eb;
}
.popup .btn-share.revealjs-serif:hover {
  background-color: #dadccd;
  color: #383d3d;
}
.popup .btn-share.revealjs-sky {
  color: #333333;
  background-color: #add9e4;
}
.popup .btn-share.revealjs-sky:hover {
  background-color: #87c7d7;
  color: #333333;
}
.popup .btn-share.revealjs-solarized {
  color: #657b83;
  background-color: #fdf6e3;
}
.popup .btn-share.revealjs-solarized:hover {
  background-color: #fae7b3;
  color: #657b83;
}
.popup .btn-share.revealjs-white {
  color: #222222;
  background-color: white;
}
.popup .btn-share.revealjs-white:hover {
  background-color: #cccccc;
  color: #222222;
}
.popup .btn-share.rst {
  color: #1c4e62;
}
.popup .btn-share.rst:hover {
  color: white;
  background-color: #1c4e62;
}
.popup .btn-share.rtf {
  color: #df3344;
}
.popup .btn-share.rtf:hover {
  background-color: #df3344;
  color: white;
}
.popup .btn-share.org {
  color: #005268;
}
.popup .btn-share.org:hover {
  background-color: #002a35;
  color: white;
}
.popup .btn-share.textbundle {
  color: #00b58c;
}
.popup .btn-share.textbundle:hover {
  background-color: #00b58c;
  color: white;
}
.popup .btn-share.textpack {
  color: #1400e6;
}
.popup .btn-share.textpack:hover {
  background-color: #0b0080;
  color: white;
}
.popup .icon-block {
  flex-grow: 1;
  width: 25px;
  height: 25px;
  line-height: 25px;
  text-align: center;
  transition: 0.2s all ease;
  cursor: default;
  font-size: 10px;
}
.popup #reveal-themes {
  transition: 0.2s height ease;
  height: 92px;
  overflow: hidden;
}
.popup #reveal-themes.hidden {
  height: 0px;
}
.popup .formatting a {
  text-decoration: none;
  display: block;
  padding: 5px 10px;
}
.popup .formatting a#header-formatting {
  display: flex;
}
.popup .formatting a#header-formatting::before {
  font-family: inherit;
  font-weight: bold;
  padding: 10px 0px;
}
.popup .formatting a span.markdownHeading1,
.popup .formatting a span.markdownHeading2,
.popup .formatting a span.markdownHeading3,
.popup .formatting a span.markdownHeading4,
.popup .formatting a span.markdownHeading5,
.popup .formatting a span.markdownHeading6 {
  display: inline-block;
  padding: 5px 0px;
  flex: 1;
  text-align: center;
  font-weight: bold;
}
.popup .formatting a clr-icon {
  height: 20px;
  width: 20px;
  margin-top: -4px;
  margin-right: 18px;
  margin-bottom: -4px;
}
.popup .formatting a span.fn-icon {
  display: inline-block;
  width: 20px;
  margin-right: 14px;
  margin-left: 4px;
}
.popup .formatting a span.fn-icon sup {
  font-size: 50%;
}
.popup .formatting #header-formatting.markdownHeading1::before {
  content: "H1";
}
.popup .formatting #header-formatting.markdownHeading2::before {
  content: "H2";
}
.popup .formatting #header-formatting.markdownHeading3::before {
  content: "H3";
}
.popup .formatting #header-formatting.markdownHeading4::before {
  content: "H4";
}
.popup .formatting #header-formatting.markdownHeading5::before {
  content: "H5";
}
.popup .formatting #header-formatting.markdownHeading6::before {
  content: "H6";
}
.popup .formatting hr {
  margin: 14px 20px;
  border: none;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
.popup .search {
  width: 350px;
}
.popup .search .row {
  display: flex;
}
.popup .search input {
  /** flex layout of the search popup:
      * 6 4
      * 6 3 1
      */
  font-size: 100%;
  flex: 0 6 auto;
  text-align: left;
  width: 60%;
  background-color: transparent;
  color: inherit;
  padding: 5px;
  border: none;
}
.popup .search input:focus {
  outline: 0;
}
.popup .search input.regexp {
  font-family: 'Liberation Mono', monospace;
}
.popup .search button {
  width: auto;
  padding: 5px 2px;
  margin: 0px;
  border-radius: 2px;
  overflow: hidden;
  outline: 0;
}
.popup .search button#searchNext {
  flex: 4 4 auto;
}
.popup .search button#replaceNext {
  flex: 2 2 auto;
}
.popup .search button#replaceAll {
  flex: 2 2 auto;
}
.popup .pomodoro p {
  font-size: 2em;
}
.popup .footnote-edit textarea {
  font-size: 1em;
  min-height: 150px;
  border: none;
  width: 250px;
}
.popup .footnote-edit textarea:focus {
  outline: 0;
}
.popup .set-target input[type="number"] {
  display: inline-block;
  font-size: 150%;
  width: 25%;
  padding: 0;
}
.popup .set-target input[type="number"]::-webkit-inner-spin-button,
.popup .set-target input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.popup .set-target select {
  display: inline-block;
  width: 45%;
  font-size: 150%;
  border: none;
  border-radius: 0px;
  background-color: transparent;
  color: inherit;
}
.popup .set-target button[type="submit"] {
  display: inline-block;
  width: 22%;
  font-size: 150%;
  margin: 0 auto;
}
#attachments {
  position: absolute;
  top: 39px;
  right: -20%;
  bottom: 0;
  width: 20%;
  overflow-y: auto;
  overflow-x: hidden;
}
#attachments #open-dir-external {
  padding: 5px;
  border-radius: 3px;
  display: inline-block;
  width: 29px;
  height: 29px;
}
#attachments #open-dir-external clr-icon {
  width: 21px;
  height: 21px;
}
#attachments h1 {
  padding: 10px;
  font-size: 1.2em;
}
#attachments p {
  padding: 10px;
}
#attachments a.attachment {
  display: block;
  margin: 10px;
  padding: 4px;
  text-decoration: none;
  color: inherit;
  white-space: nowrap;
}
#attachments a.attachment svg {
  width: 24px;
  height: 24px;
  margin-right: 4px;
  vertical-align: bottom;
  margin-bottom: -1px;
}
#attachments div.csl-bib-body div.csl-entry {
  display: list-item;
  list-style-type: square;
  margin: 1em 0.2em 1em 1.8em;
  font-size: 80%;
}
/*
* CHECKBOXES
*/
.cb-toggle {
  position: relative;
  display: inline-block !important;
  width: 36px;
  height: 18px;
  margin: 0 !important;
  padding: 0;
}
.cb-toggle input {
  display: none !important;
}
.cb-toggle .toggle {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: 0.4s;
  border-radius: 10px;
  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
.cb-toggle .toggle:before {
  position: absolute;
  content: "";
  height: 14px;
  width: 14px;
  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.5);
  left: 2px;
  bottom: 2px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}
.cb-toggle input:checked + .toggle:before {
  transform: translateX(18px);
}
.radio-toggle {
  position: relative;
  display: inline-block !important;
  width: 18px;
  height: 18px;
  margin: 0 !important;
  padding: 0;
}
.radio-toggle input {
  display: none !important;
}
.radio-toggle .toggle {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 10px;
}
.radio-toggle .toggle:before {
  position: absolute;
  content: "";
  height: 10px;
  width: 10px;
  left: 4px;
  bottom: 4px;
  background-color: transparent;
  border-radius: 50%;
  transition: 0.4s;
}
.cb-group {
  margin: 5px;
}
.cb-group > label {
  line-height: 22px;
  vertical-align: middle;
}
.cb-group > input[type="radio"] {
  margin: 0 !important;
}
.cb-group > .cb-toggle {
  margin-right: 0.2em;
}
/*
 * SLIDERS / RANGES
 */
input[type=range] {
  -webkit-appearance: none;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 18px;
  cursor: pointer;
  border-radius: 11px;
  padding: 2px;
  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
input[type=range]::-webkit-slider-thumb {
  height: 14px;
  width: 14px;
  border-radius: 100%;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: 0px;
  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.5);
}
progress {
  border: 0;
  height: 36px;
  border-radius: 3px;
}
/**
 * This file contains the window controls for Linux and Windows packages. There
 * are none for macOS, as we can make use of the hiddenInset window style to
 * display the traffic lights even with no other chrome around the window.
 */
.linux-window-controls,
.windows-window-controls {
  cursor: default;
  display: none;
  -webkit-app-region: no-drag;
}
body.win32 .windows-window-controls {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
}
body.win32 .windows-window-controls .minimise,
body.win32 .windows-window-controls .resize,
body.win32 .windows-window-controls .close {
  float: left;
  width: 45px;
  height: 31px;
  margin: 1px 1px 0 0;
  text-align: center;
  line-height: 29px;
  transition: background-color 0.2s;
}
body.win32 .windows-window-controls .minimise svg,
body.win32 .windows-window-controls .resize svg,
body.win32 .windows-window-controls .close svg {
  width: 10px;
  height: 10px;
  shape-rendering: crispEdges;
}
body.win32 .windows-window-controls .minimise:hover,
body.win32 .windows-window-controls .resize:hover,
body.win32 .windows-window-controls .close:hover {
  background-color: rgba(255, 255, 255, 0.5);
}
body.win32 .windows-window-controls .close svg polygon {
  transition: fill 0.2s;
}
body.win32 .windows-window-controls .close:hover {
  background-color: rgba(232, 17, 35, 0.9);
}
body.win32 .windows-window-controls .close:hover svg polygon {
  fill: #ffffff;
}
/*
* This file contains theme mockup styles, as they are rather large and need
* their own space. It includes colouring taken from the variables of the
* respective themes.
*/
div.theme-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}
div.theme-container div.theme-container-item {
  flex: 1;
  width: 240px;
  padding: 20px;
}
div.theme-mockup {
  width: 200px;
  height: 150px;
  position: relative;
  display: inline-block;
  overflow: hidden;
  border-radius: 5px;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: 0.5s all ease;
  /* Traffic lights */
}
div.theme-mockup:hover {
  transform: scale(1.2);
  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.4);
}
div.theme-mockup div.traffic-lights {
  position: absolute;
  top: 3px;
  left: 3px;
  display: flex;
  width: 30%;
  height: 12px;
  z-index: 9999;
}
div.theme-mockup div.traffic-lights div.traffic-light-close,
div.theme-mockup div.traffic-lights div.traffic-light-min,
div.theme-mockup div.traffic-lights div.traffic-light-full {
  width: 10px;
  height: 10px;
  border-radius: 100%;
  margin: 2px;
}
div.theme-mockup div.traffic-lights div.traffic-light-close {
  background-color: #ee6b60;
}
div.theme-mockup div.traffic-lights div.traffic-light-min {
  background-color: #f6bf50;
}
div.theme-mockup div.traffic-lights div.traffic-light-full {
  background-color: #65cc58;
}
div.theme-mockup div.toolbar {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 20px;
  background-color: #f0f0f0;
}
div.theme-mockup div.file-list {
  position: absolute;
  top: 20px;
  bottom: 0px;
  left: 0px;
  width: 30%;
  display: flex;
  flex-direction: column;
  border-right: 1px solid transparent;
  background-color: rgba(0, 0, 0, 0.2);
}
div.theme-mockup div.file-list div.file-list-item {
  flex: 1;
  border-bottom: 1px solid transparent;
  font-size: 5px;
  /* No border on the last child */
}
div.theme-mockup div.file-list div.file-list-item:last-child {
  border-bottom: none;
}
div.theme-mockup div.editor {
  width: 70%;
  height: 100%;
  position: absolute;
  left: 30%;
  top: 0;
}
div.theme-mockup div.editor p {
  height: 20px;
  font-size: 18px;
  margin-top: 50%;
  text-align: center;
}
#theme-berlin-mockup.theme-mockup {
  background-color: #1cb27e;
}
#theme-berlin-mockup div.file-list {
  border-color: #505050;
}
#theme-berlin-mockup div.editor p {
  color: white;
  font-family: 'Lato', sans-serif;
}
#theme-berlin-mockup div.file-list-item {
  border-color: #505050;
}
#theme-frankfurt-mockup.theme-mockup {
  background-color: #1d75b3;
}
#theme-frankfurt-mockup div.file-list {
  border-color: #c8c8c8;
}
#theme-frankfurt-mockup div.editor p {
  color: white;
  font-family: 'Crimson', serif;
}
#theme-frankfurt-mockup div.file-list-item {
  border-color: #c8c8c8;
}
#theme-bielefeld-mockup.theme-mockup {
  background-color: #ffffdc;
}
#theme-bielefeld-mockup div.file-list {
  border-color: #969696;
}
#theme-bielefeld-mockup div.editor p {
  color: #333;
  font-family: 'Liberation Mono', monospace;
}
#theme-bielefeld-mockup div.file-list div.file-list-item {
  border-color: #969696;
}
#theme-karl-marx-stadt-mockup.theme-mockup {
  background-color: #dc2d2d;
}
#theme-karl-marx-stadt-mockup div.file-list {
  border-color: #969696;
}
#theme-karl-marx-stadt-mockup div.editor p {
  color: #ddd;
  font-family: 'Lato', sans-serif;
}
#theme-karl-marx-stadt-mockup div.file-list div.file-list-item {
  border-color: #969696;
}
#theme-bordeaux-mockup.theme-mockup {
  background-color: #fffff8;
}
#theme-bordeaux-mockup div.file-list {
  border-color: #657b83;
  background-color: #eaeaea;
}
#theme-bordeaux-mockup div.editor p {
  color: #d02325;
  font-family: 'Inconsolata', monospace;
}
#theme-bordeaux-mockup div.file-list div.file-list-item {
  border-color: #657b83;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlb21ldHJ5LW1haW4ubGVzcyIsIi4uL2ZvbnRzLmxlc3MiLCIuLi9hbmltYXRpb24tY3Vyc29yLmxlc3MiLCJtb2RhbC5sZXNzIiwiZmlsZS1saXN0Lmxlc3MiLCJmaWxlLXRyZWUubGVzcyIsInNpZGViYXIubGVzcyIsImVkaXRvci5sZXNzIiwiZG9jdW1lbnQtdGFicy5sZXNzIiwiY29kZW1pcnJvci5sZXNzIiwicXVpY2tsb29rLmxlc3MiLCJ0b29sYmFyLmxlc3MiLCJub3RpZnkubGVzcyIsInBvcHVwLmxlc3MiLCJhdHRhY2htZW50cy5sZXNzIiwiaW5wdXRzLmxlc3MiLCJ3aW5kb3ctY29udHJvbHMubGVzcyIsInRoZW1lLW1vY2t1cHMubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FBcUJBO0FDWEE7RUFDSSxhQUFhLHNCQUFiO0VBQ0EsU0FBUyw2Q0FBVDtFQUNBLFNBQVMscURBQXFELE9BQU8sMEJBQzVELDhDQUE4QyxPQUFPLFdBRDlEO0VBRUEsbUJBQUE7RUFDQSxrQkFBQTs7QUFJSjtFQUNJLGFBQWEsTUFBYjtFQUNBLFNBQVMsa0NBQWtDLE9BQU8sUUFBbEQ7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0NBQUE7O0FBRUo7RUFDSSxhQUFhLE1BQWI7RUFDQSxTQUFTLHdDQUF3QyxPQUFPLFFBQXhEO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtDQUFBOztBQUdKO0VBQ0ksYUFBYSxNQUFiO0VBQ0EsU0FBUyxrQ0FBa0MsT0FBTyxRQUFsRDtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQ0FBQTs7QUFFSjtFQUNJLGFBQWEsTUFBYjtFQUNBLFNBQVMsd0NBQXdDLE9BQU8sUUFBeEQ7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0NBQUE7O0FBSUo7RUFDSSxhQUFhLFNBQWI7RUFDQSxTQUFTLHNDQUFzQyxPQUFPLE1BQXREO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtD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RUFDQSxlQUFBO0VBQ0Esa0JBQUE7O0FBT0osb0JBQUM7RUFBZ0IseUJBQUE7O0FBRG5CLG9CQUVFLElBQUc7RUFBYSxxQkFBQTs7QUFGbEIsb0JBR0UsSUFBRyxPQUFRO0VBQUksWUFBQTtFQUFjLGFoQjFHbkIsa0JnQjBHbUI7O0FBSC9CLG9CQUlFLElBQUc7RUFBa0IscUJBQUE7O0FBSXJCLHVCQUFDO0VBQWdCLHlCQUFBOztBQURuQix1QkFFRSxJQUFHO0VBQWEscUJBQUE7O0FBRmxCLHVCQUdFLElBQUcsT0FBUTtFQUFJLFlBQUE7RUFBYyxhaEIvR2hCLGdCZ0IrR2dCOztBQUgvQix1QkFJRSxJQUFHO0VBQWtCLHFCQUFBOztBQUlyQix1QkFBQztFQUFnQix5QkFBQTs7QUFEbkIsdUJBRUUsSUFBRztFQUFhLHFCQUFBOztBQUZsQix1QkFHRSxJQUFHLE9BQVE7RUFBSSxXQUFBO0VBQWEsYWhCckhaLDRCZ0JxSFk7O0FBSDlCLHVCQUlFLElBQUcsVUFBVyxJQUFHO0VBQWtCLHFCQUFBOztBQUluQyw2QkFBQztFQUFnQix5QkFBQTs7QUFEbkIsNkJBRUUsSUFBRztFQUFhLHFCQUFBOztBQUZsQiw2QkFHRSxJQUFHLE9BQVE7RUFBSSxXQUFBO0VBQWEsYWhCL0hsQixrQmdCK0hrQjs7QUFIOUIsNkJBSUUsSUFBRyxVQUFXLElBQUc7RUFBa0IscUJBQUE7O0FBSW5DLHNCQUFDO0VBQWdCLHlCQUFBOztBQURuQixzQkFFRSxJQUFHO0VBQ0QscUJBQUE7RUFDQSx5QkFBQTs7QUFKSixzQkFNRSxJQUFHLE9BQVE7RUFBSSxjQUFBO0VBQWdCLGFBQWEsd0JBQWI7O0FBTmpDLHNCQU9FLElBQUcsVUFBVyxJQUFHO0VBQWtCLHFCQUFBIiwiZmlsZSI6Imdlb21ldHJ5LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQkVHSU4gSEVBREVSXG4gKlxuICogQ29udGFpbnM6ICAgICAgICBHZW9tZXRyeSBDU1NcbiAqIENWTS1Sb2xlOiAgICAgICAgVGhlbWVcbiAqIE1haW50YWluZXI6ICAgICAgSGVuZHJpayBFcnpcbiAqIExpY2Vuc2U6ICAgICAgICAgR05VIEdQTCB2M1xuICpcbiAqIERlc2NyaXB0aW9uOiAgICAgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYWluIGNvbW1hbmRzIGFuZCBzdHlsZSBydWxlcyBmb3IgdGhlXG4gKiAgICAgICAgICAgICAgICAgIGdlb21ldHJ5IG9mIHRoZSBhcHAgaXRzZWxmLiBJdCBzaXplcyBhbmQgZnJhbWVzIHRoZSBlbGVtZW50c1xuICogICAgICAgICAgICAgICAgICBidXQgZG9lcyBub3QgY29udGFpbiBhbnkgY29sb3VycyBvciBvdGhlciBzdHlsaW5nIGVsZW1lbnRzLlxuICogICAgICAgICAgICAgICAgICBUaGVzZSBhcmUgbG9jYXRlZCBpbiB0aGUgdGhlbWUgZmlsZXMuXG4gKlxuICogICAgICAgICAgICAgICAgICBUaGUgYWltIG9mIHRoZSBnZW9tZXRyeSBpcyB0aGF0IGV2ZW4gd2l0aG91dCBhbnkgdGhlbWUgYWxsXG4gKiAgICAgICAgICAgICAgICAgIGVsZW1lbnRzIGFyZSBwb3NpdGlvbmVkIGNvcnJlY3RseS4gQ29sb3VyaW5nIGlzIHRoZSBvbmx5XG4gKiAgICAgICAgICAgICAgICAgIHRoaW5nIHRoYXQgd2lsbCBhdCB0aGF0IHBvaW50IGJlIG1pc3NpbmcuXG4gKlxuICogRU5EIEhFQURFUlxuICovXG5cbi8vIEltcG9ydCB0aGUgQ29kZU1pcnJvciBDU1Mgc28gd2UgY2FuIGJ1bmRsZSBpdCB3aXRoIHRoZSBnZW9tZXRyeSBmaWxlXG5AaW1wb3J0IFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NvZGVtaXJyb3IvbGliL2NvZGVtaXJyb3IuY3NzXCI7XG5cbi8vIEZpcnN0IGltcG9ydCB0aGUgZ2VvbWV0cnkgdmFyaWFibGVzXG5AaW1wb3J0IFwidmFyaWFibGVzLmxlc3NcIjtcblxuLy8gVGhlbiB0aGUgZm9udCBzZXRzXG5AaW1wb3J0IFwiLi4vZm9udHMubGVzc1wiO1xuXG4vLyBTZXQgdGhlIGNvZGUgZm9udFxuQGZvbnQtY29kZTogQGZvbnQtbGliZXJhdGlvbjtcblxuLy8gQ29tbW9uIENTU1xuKiB7XG4gICAgbWFyZ2luOjA7XG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgICBmb250LXNpemU6IEBmb250LXNpemUtYmFzZTtcbiAgICAvLyBQcmV2ZW50IHRleHQgc2VsZWN0aW9uIGN1cnNvciB0aHJvdWdob3V0IHRoZSBhcHAgKGV4Y2VwdCBDb2RlTWlycm9yKVxuICAgIGN1cnNvcjpkZWZhdWx0O1xufVxuXG5ib2R5IHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHVzZXItc2VsZWN0Om5vbmU7IC8vIFByZXZlbnQgYXJiaXRyYXJ5IHNlbGVjdGlvbiBvdXRzaWRlIG9mIGlucHV0c1xuXG4gICAgLmRyYWdnZXIge1xuICAgICAgICBjdXJzb3I6ZGVmYXVsdDtcbiAgICB9XG59XG5cbi8vIFJlc2V0IHRob3NlIHVnbHkgb3V0bGluZXNcbmlucHV0LCBzZWxlY3QsIHRleHRhcmVhLCBidXR0b24geyAmOmZvY3VzIHsgb3V0bGluZTogMDsgfSB9XG5cbiNjb250YWluZXIuYmx1ciB7XG4gICAgLyogVGhpcyBpcyBhcHBsaWVkIHdoZW4gYSBtb2RhbCBpcyBzaG93biAqL1xuICAgIC8vIEN1cnJlbnRseSB0aGUgZmlsdGVyIGRyYWlucyB0b28gbXVjaCBlbmVyZ3kgc28gSSd2ZSBkaXNhYmxlZCBpdC4gTWF5YmUgd2VcbiAgICAvLyBjYW4gcmUtYWN0aXZhdGUgaXQgc29tZSBkYXkgd2hlbiBjaHJvbWUgaGFuZGxlcyBmdWxsLXNjcmVlbiBibHVycmluZyBiZXR0ZXIuXG4gICAgLy8gTGV0IGFsb25lIGZvciB0aGUgbmljZSBwdW4uXG4gICAgLy8gZmlsdGVyOmJsdXIoQHNvbmcyKTtcbn1cblxuOjotd2Via2l0LXNjcm9sbGJhciB7IHdpZHRoOiAxMHB4OyB9XG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsgYm9yZGVyLXJhZGl1czogMTBweDsgfVxuXG4uY2xlYXJmaXggeyBjbGVhcjpib3RoOyB9XG5cbi8qKlxuICogTm93IHRoZSBpbXBvcnQgZGlyZWN0aXZlcyB0byBpbmNsdWRlIHRoZSBnZW9tZXRyaWNhbCBwcmVjb25kaXRpb25zIGZvciBhbGxcbiAqIGVsZW1lbnRzLlxuICovXG5cbiAvLyBDdXJzb3IgYmxpbmsgYW5pbWF0aW9uIChzZWUgY29kZW1pcnJvci5sZXNzIGZvciBpbXBsZW1lbnRhdGlvbilcbiBAaW1wb3J0IFwiLi4vYW5pbWF0aW9uLWN1cnNvci5sZXNzXCI7XG4gQGN1cnNvci1ibGluay1yYXRlOiAxczsgLy8gSG93IGZhc3Qgc2hvdWxkIHRoZSBjdXJzb3IgYmxpbms/XG5cbiAvLyBFTkQgQU5JTUFUSU9OU1xuXG5AaW1wb3J0IFwibW9kYWwubGVzc1wiO1xuXG5AaW1wb3J0IFwiZmlsZS1saXN0Lmxlc3NcIjtcbkBpbXBvcnQgXCJmaWxlLXRyZWUubGVzc1wiO1xuQGltcG9ydCBcInNpZGViYXIubGVzc1wiO1xuXG5AaW1wb3J0IFwiZWRpdG9yLmxlc3NcIjtcblxuQGltcG9ydCBcImRvY3VtZW50LXRhYnMubGVzc1wiO1xuXG5AaW1wb3J0IFwiY29kZW1pcnJvci5sZXNzXCI7XG5cbkBpbXBvcnQgXCJxdWlja2xvb2subGVzc1wiO1xuXG5AaW1wb3J0IFwidG9vbGJhci5sZXNzXCI7XG5cbkBpbXBvcnQgXCJub3RpZnkubGVzc1wiO1xuXG5AaW1wb3J0IFwicG9wdXAubGVzc1wiO1xuXG5AaW1wb3J0IFwiYXR0YWNobWVudHMubGVzc1wiO1xuXG5AaW1wb3J0IFwiaW5wdXRzLmxlc3NcIjtcblxuQGltcG9ydCBcIndpbmRvdy1jb250cm9scy5sZXNzXCI7XG5cbkBpbXBvcnQgXCJ0aGVtZS1tb2NrdXBzLmxlc3NcIjsgLy8gQ29udGFpbnMgdGhlIG1vY2t1cCBkZXNpZ25zIGZvciB0aGUgdGhlbWUgc3dpdGNoZXJcbiIsIi8vIEZvbnQgZGVjbGFyYXRpb25zXG5cbi8vIEZvbnQgdmFyaWFibGVzXG5AZm9udC1sYXRvOiAnTGF0bycsIHNhbnMtc2VyaWY7XG5AZm9udC1zYW5zLXdpbjogJ1NlZ29lIFVJJywgc2Fucy1zZXJpZjsgLy8gV2luZG93cyBmYWxsYmFja1xuQGZvbnQtY3JpbXNvbjogJ0NyaW1zb24nLCBzZXJpZjtcbkBmb250LWxpYmVyYXRpb246ICdMaWJlcmF0aW9uIE1vbm8nLCBtb25vc3BhY2U7XG5AZm9udC1pbmNvbnNvbGF0YTogJ0luY29uc29sYXRhJywgbW9ub3NwYWNlO1xuXG4vLyBTeW1ib2xzIChpY29ucylcbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnV2ViSG9zdGluZ0h1Yi1HbHlwaHMnO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy93aGgtZm9udC93ZWJob3N0aW5naHViLWdseXBocy5lb3QnKTtcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvd2hoLWZvbnQvd2ViaG9zdGluZ2h1Yi1nbHlwaHMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvd2hoLWZvbnQvd2ViaG9zdGluZ2h1Yi1nbHlwaHMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vLyBMYXRvIFdlYmZvbnRzIChzYW5zLXNlcmlmKVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvbGF0by9MYXRvLUxpZ2h0LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0xhdG8nO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9sYXRvL0xhdG8tTGlnaHRJdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvbGF0by9MYXRvLUhlYXZ5LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMYXRvJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvbGF0by9MYXRvLUhlYXZ5SXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuXG4vLyBDcmltc29uIChzZXJpZilcbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnQ3JpbXNvbic7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2NyaW1zb24vQ3JpbXNvbi1Sb21hbi5vdGYnKSBmb3JtYXQoJ290ZicpO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0NyaW1zb24nO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9jcmltc29uL0NyaW1zb24tSXRhbGljLm90ZicpIGZvcm1hdCgnb3RmJyk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdDcmltc29uJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvY3JpbXNvbi9Dcmltc29uLUJvbGQub3RmJykgZm9ybWF0KCdvdGYnKTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnQ3JpbXNvbic7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2NyaW1zb24vQ3JpbXNvbi1Cb2xkSXRhbGljLm90ZicpIGZvcm1hdCgnb3RmJyk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbi8vIExpYmVyYXRpb24gTW9ubyAobW9ub3NwYWNlKVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMaWJlcmF0aW9uIE1vbm8nO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9saWJlcmF0aW9uLW1vbm8vTGliZXJhdGlvbk1vbm8tUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTGliZXJhdGlvbiBNb25vJztcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvbGliZXJhdGlvbi1tb25vL0xpYmVyYXRpb25Nb25vLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdMaWJlcmF0aW9uIE1vbm8nO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9saWJlcmF0aW9uLW1vbm8vTGliZXJhdGlvbk1vbm8tQm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0xpYmVyYXRpb24gTW9ubyc7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2xpYmVyYXRpb24tbW9uby9MaWJlcmF0aW9uTW9uby1Cb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuLy8gSW5jb25zb2xhdGEgKG1vbm9zcGFjZSlcbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJztcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL2luY29uc29sYXRhL0luY29uc29sYXRhLVJlZ3VsYXIub3RmJykgZm9ybWF0KCdvdGYnKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdJbmNvbnNvbGF0YSc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9pbmNvbnNvbGF0YS9JbmNvbnNvbGF0YS1Cb2xkLm90ZicpIGZvcm1hdCgnb3RmJyk7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG4iLCIvLyBUaGlzIGZpbGUgY29udGFpbnMgdGhlIGtleWZyYW1lcyBmb3IgdGhlIGN1cnNvciBibGluayByYXRlLlxuQGtleWZyYW1lcyBzb2Z0LWJsaW5rIHtcbiAgMCUgICB7IG9wYWNpdHk6IDE7IH1cbiAgNDAlICB7IG9wYWNpdHk6IDE7IH1cbiAgNTUlICB7IG9wYWNpdHk6IDA7IH1cbiAgODUlICB7IG9wYWNpdHk6IDA7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDE7IH1cbn1cblxuLy8gQmFzaWNhbGx5IHRoaXMgaXMgYSBncmFkaWVudCBvZiBvcGFjaXR5LiBUaGUgdmlzaWJsZSBwYXJ0IHN0YXlzIGF0IHRoZVxuLy8gYmVnaW5uaW5nIGFuZCB0aGUgdHJhbnNwYXJlbnQgcGFydCBtb3ZlcyB0byB0aGUgZW5kIG9mIHRoZSBhbmltYXRpb24sIGJlY2F1c2Vcbi8vIHRoZSBhbmltYXRpb24gYWx3YXlzIHN0YXJ0cyB3aXRoIHRoZSBjdXJzb3IgYmVpbmcgdmlzaWJsZS5cbiIsIi8vIEdlb21ldHJ5IGZvciB0aGUgcmVuZGVyZXIgbW9kYWxzXG5cbkBkaWFsb2ctYnJlYWtwb2ludDogODAwcHg7XG5cbi5tb2RhbCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICBvdmVyZmxvdy14OiBoaWRkZW47IC8qIEZvciBsb25nZXIgc2V0dGluZ3MoPykgYW5kIHN0dWZmIGRpYWxvZ3MgKi9cbiAgb3ZlcmZsb3cteTogYXV0bztcblxuICAuZGlhbG9nIHtcbiAgICBtYXJnaW46IDAgMTUlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG5cbiAgICAvLyBHZW5lcmFsIHR5cG9ncmFwaHlcbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG5cbiAgICAgIHNtYWxsIHsgZm9udC1zaXplOiA3NSU7IH1cbiAgICB9XG5cbiAgICBzcGFuLnV1aWQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiAtM2VtOyAvLyBQbGFjZSBkaXJlY3RseSB1bmRlcm5lYXRoIHRoZSBoZWFkaW5nXG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICBmb250LXNpemU6IDc1JTtcbiAgICAgIHVzZXItc2VsZWN0OiB0ZXh0OyAvLyBUaGUgVVVJRCBtYXkgYmUgY29waWVkXG4gICAgICBjdXJzb3I6IHRleHQ7XG4gICAgfVxuXG4gICAgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgc21hbGwgeyBmb250LXNpemU6IDc1JTsgfVxuICAgIH1cblxuICAgIHAsIGxpIHsgbGluZS1oZWlnaHQ6IDE1MCU7IH1cblxuICAgIHVsLCBvbCwgcCwgbGkgeyBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuXG4gICAgaHIge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luOiAxZW0gMTAlO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAvLyBUaGUgZm9sbG93aW5nIGNsYXNzIGlzIHVzZWQgaW4gdGhlIHBhc3RlLWltYWdlIGRpYWxvZy5cbiAgICAgICYuaW1hZ2UtcHJldmlldyB7XG4gICAgICAgIC8vIFJlc3RyaWN0IHByZXZpZXcgaW1hZ2VzIHRvIGEgc21hbGxlciBoZWlnaHQuIFRoZXkgb25seSBzaG91bGQgYmVcbiAgICAgICAgLy8gcHJldmlld2VkLCBhZnRlciBhbGwuXG4gICAgICAgIG1heC1oZWlnaHQ6IDUwdmg7XG4gICAgICAgIC8vIENlbnRlciB0aGUgcHJldmlld3NcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEZvcm1zXG5cbiAgICBzZWxlY3QjYXBwLWxhbmcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG5cbiAgICBsYWJlbCB7XG4gICAgICBtYXJnaW46IDFlbSAwLjVlbSAwLjVlbSAwZW07XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDJweCAxMHB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgICAmLmlubGluZSB7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG5cbiAgICAgICYudGltZSB7XG4gICAgICAgIC8vIFRpbWUgZmllbGRzIGNhbiBiZSBleHRyYSBuYXJyb3dcbiAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzcGFuLmluZm8ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiAwZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgIGlucHV0Om5vdCguaW5saW5lKSB+IHNwYW4uaW5mbyB7XG4gICAgICBtYXJnaW4tdG9wOiAtMWVtOyAvLyBSZXNldCB0aGUgaW5wdXQncyBtYXJnaW5cbiAgICB9XG5cbiAgICBzZWxlY3Qge1xuICAgICAgbGluZS1oZWlnaHQ6IDIwMCU7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICAgIG1hcmdpbjogMC41ZW07XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLCBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICAgICAgbWFyZ2luOiAwLjVlbTtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB9XG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IEBib3JkZXItcmFkaXVzO1xuICAgIH1cblxuICAgIGJ1dHRvbiwgYS5idXR0b24ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICBtYXJnaW46IDFlbTtcbiAgICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogIG5vbmU7XG4gICAgfVxuXG5cbiAgICBkaXYuaW5wdXQtYnV0dG9uLWdyb3VwIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICBpbnB1dCB7XG4gICAgICAgIGZsZXg6IDAgNSBhdXRvO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgICAgIH1cbiAgICAgIGJ1dHRvbiB7XG4gICAgICAgIGZsZXg6IDAgMSBhdXRvO1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFN0eWxlIGZvciBidXR0b25zIHNvbGVseSBjb250YWluIGljb25zXG4gICAgYnV0dG9uLmljb24ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgICAgbWluLWhlaWdodDogMjhweDtcbiAgICB9XG5cbiAgICAvLyBXaHkgdGhlIC5jb2RlLWNsYXNzPyBCZWNhdXNlIHNvbWV0aW1lcyB3ZSBoYXZlIGEgc21hbGwgY29kZSBhcmVhLFxuICAgIC8vIHNvbWV0aW1lcyBpdCdzIHRoZSBvbmx5IGNvbnRlbnQgb2YgdGhlIGRpYWxvZyAoaW4gd2hpY2ggY2FzZSB3ZVxuICAgIC8vIG5lZWQgdG8gY29uc3RyYWluIGl0cyBzaXplIGluIHRoZSBnZW9tZXRyeSBwYXJ0KVxuICAgIC5jaGFuZ2Vsb2csIC5jb2RlIHtcbiAgICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICBtYXJnaW46IDEwcHggMHB4O1xuICAgICAgdXNlci1zZWxlY3Q6IHRleHQ7IC8vIFRoZSBjb2RlIGNvbnRlbnRzIG1heSBiZSBjb3BpZWRcbiAgICB9XG5cbiAgICAvKiBNb2NrIGEgPHByZT4tdGFnICovXG4gICAgLmNvZGUge1xuICAgICAgd2hpdGUtc3BhY2U6IHByZTtcbiAgICAgIGZvbnQtZmFtaWx5OiBAZm9udC1jb2RlO1xuICAgICAgdXNlci1zZWxlY3Q6IHRleHQ7IC8vIFRoZSBjb2RlIGNvbnRlbnRzIG1heSBiZSBjb3BpZWRcbiAgICB9XG5cbiAgICBkaXYuY2xlYXIgeyBjbGVhcjogYm90aDsgfVxuXG4gICAgLy8gYm94LWxlZnQgYW5kIGJveC1yaWdodCBhcmUgdXNlZCBvbiBub3JtYWwgZnVsbHNjcmVlbiB0byBkaXNwbGF5IGNvbnRlbnRcbiAgICAvLyBzaWRlLWJ5LXNpZGUsIHdoaWxlIG9uIHNtYWxsZXIgc2NyZWVucyAoaS5lLiBsZXNzIHRoYW4gODAwcHgpIGZvciB0aGVcbiAgICAvLyBzYWtlIG9mIHJlYWRhYmlsaXR5IGl0IHdpbGwgYmUgZGlzcGxheWVkIGZ1bGwgd2lkdGggb24gdGhlIG1vZGFscy5cbiAgICBkaXYuYm94LWxlZnQsIGRpdi5ib3gtcmlnaHQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAyJTtcbiAgICB9XG5cbiAgICAvLyBIZWxwZXIgY2xhc3MgZm9yIGNvbnRhaW5lcnMgdGhhdCBzaG91bGQgbm90IGV4Y2VlZCBhIGNlcnRhaW4gaGVpZ2h0XG4gICAgLm1vZGFsLWNvbnRhaW5lci1jb25zdHJhaW4tc2l6ZSB7XG4gICAgICBtYXgtaGVpZ2h0OiA1MHZoO1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICB9XG5cbiAgICAvLyBPbiBsYXJnZXIgc2NyZWVucywgYm94LWxlZnQgYW5kIGJveC1yaWdodCBhcmUgZGlzcGxheWVkIG5leHQgdG8gZWFjaCBvdGhlci5cbiAgICBAbWVkaWEobWluLXdpZHRoOiBAZGlhbG9nLWJyZWFrcG9pbnQpIHtcbiAgICAgIGRpdi5ib3gtbGVmdCxcbiAgICAgIGRpdi5ib3gtcmlnaHQgeyB3aWR0aDogNTAlOyB9XG4gICAgICBkaXYuYm94LWxlZnQgIHsgZmxvYXQ6IGxlZnQ7IH1cbiAgICAgIGRpdi5ib3gtcmlnaHQgeyBmbG9hdDogcmlnaHQ7IH1cbiAgICB9XG5cbiAgICAvLyBQb3NpdGlvbmluZyBvZiB0aGUgcGFwZXIgbWFyZ2luIHRleHQgZWxlbWVudHNcbiAgICBkaXYucGFwZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmLmE0cGFwZXIge1xuICAgICAgICB3aWR0aDogNWVtOyAvLyBBcHByb3guIGFzcGVjdCByYXRpbyBpcyA1ZW0vN2VtXG4gICAgICAgIGhlaWdodDogN2VtO1xuICAgICAgICBtYXJnaW46IDFlbSBhdXRvO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgIH1cblxuICAgICAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDRlbTtcblxuICAgICAgICAmOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCAmOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC50bWFyZ2luLCAucm1hcmdpbiwgLmJtYXJnaW4sIC5sbWFyZ2luIHsgcG9zaXRpb246IGFic29sdXRlOyB9XG4gICAgICAudG1hcmdpbiB7IHRvcDogLTJlbTsgICAgIG1hcmdpbjogMCAwLjVlbTsgfVxuICAgICAgLnJtYXJnaW4geyByaWdodDogLTQuMWVtOyB0b3A6IDIuNWVtOyAgICAgIH1cbiAgICAgIC5ibWFyZ2luIHsgYm90dG9tOiAtMmVtOyAgbWFyZ2luOiAwIDAuNWVtOyB9XG4gICAgICAubG1hcmdpbiB7IGxlZnQ6IC00LjJlbTsgIHRvcDogMi41ZW07ICAgICAgfVxuICAgIH1cblxuICAgIC8vIFBvc2l0aW9uaW5nIG9mIHRoZSBpbWFnZSBzaXplIGNvbnN0cmFpbnQgc2xpZGVyc1xuICAgIGRpdi5pbWFnZS1zaXplIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGhlaWdodDogOWVtO1xuICAgICAgd2lkdGg6IDhlbTtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyAvLyBDZW50ZXIgdGhlIGVsZW1lbnRcblxuICAgICAgLmltYWdlIHtcbiAgICAgICAgd2lkdGg6IDZlbTtcbiAgICAgICAgaGVpZ2h0OiA2ZW07XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaW1hZ2UtcHJldmlldy5wbmdcIik7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIH1cblxuICAgICAgI2ltYWdlV2lkdGgge1xuICAgICAgICB3aWR0aDogNmVtO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMTBweDtcbiAgICAgIH1cblxuICAgICAgI2ltYWdlSGVpZ2h0IHtcbiAgICAgICAgd2lkdGg6IDZlbTtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVaKC05MGRlZyk7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAyLjVlbTtcbiAgICAgICAgbGVmdDogNGVtO1xuICAgICAgfVxuXG4gICAgICAjcHJldmlldy1pbWFnZS1zaXplcyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgICBsZWZ0OiAxZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRoaXMgaXMgdGhlIHBhcmFncmFwaCBuZWVkZWQgZm9yIHByZXZpZXdpbmcgb2YgY2hhbmdlcyB0byBQREYgcHJlZmVyZW5jZXMuXG4gICAgLnBkZi1wcmV2aWV3IHtcbiAgICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIH1cblxuICAgIC5lcnJvciB7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICBtYXJnaW46IDAuNWVtO1xuICAgICAgcGFkZGluZzogMWVtO1xuICAgIH1cblxuICAgIGRpdiNwcmVmcy10YWdsaXN0IHtcbiAgICAgIGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICAgICAgaW5wdXQsIGJ1dHRvbiB7XG4gICAgICAgICAgZmxleDogNTtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICAgbWFyZ2luOiAwLjVlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0W3R5cGU9XCJjb2xvclwiXSB7IGZsZXg6IDE7IH1cbiAgICAgICAgYnV0dG9uIHsgZmxleDogMTsgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFib3V0IHByb2plY3RzIHNlY3Rpb25cbiAgICAucHJvamVjdHMge1xuICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgLmZsZXgge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBwYWRkaW5nOjFlbTtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBUYWJzIHN0eWxlc1xuICAgIC51aS10YWJzLW5hdiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5cbiAgICAgIC51aS10YWJzLXRhYiB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwMCU7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgcGFkZGluZzogMCA2cHg7XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBFTkQgdGFicyBzdHlsZXNcbiAgICB9XG5cbiAgICAvLyBEaWN0aW9uYXJ5IGxpc3QgZ2VvbWV0cnlcbiAgICB1bC5kaWN0cy1saXN0IHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcblxuICAgICAgbGkuZGljdHMtbGlzdC1pdGVtIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB1bC51c2VyLWRpY3Qge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgbWF4LWhlaWdodDogMzAwcHg7XG4gICAgICBvdmVyZmxvdy15OiBhdXRvO1xuXG4gICAgICBsaS51c2VyLWRpY3QtaXRlbSB7XG4gICAgICAgIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgZmxleDogMSAwIGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgY2xyLWljb24ge1xuICAgICAgICAgIGZsZXg6IDAgMSBhdXRvO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5wdXQuZGljdHMtbGlzdC1zZWFyY2gge1xuICAgICAgbGluZS1oZWlnaHQ6IDIwMCU7XG4gICAgfVxuXG4gICAgLnNlbGVjdGVkLWRpY3Qge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cblxuICAgIC50YWcgY2xyLWljb24ge1xuICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xuICAgIH1cbiAgICAvLyBFTkQgZGlhbG9nIHN0eWxlc1xuICB9XG4gIC8vIEVORCBtb2RhbCBzdHlsZXNcbn1cbiIsIi8vIFByZXZpZXcgcGFuZVxuXG4jZmlsZS1saXN0IHtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICB0b3A6MDtcbiAgICBsZWZ0OjAlO1xuICAgIGJvdHRvbTowO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBvdmVyZmxvdy14OmhpZGRlbjtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIHRyYW5zaXRpb246MC4zcyBsZWZ0IGVhc2U7XG5cbiAgICAmLmhpZGRlbiB7IGxlZnQ6MTAwJTsgfVxuXG4gICAgZGl2Lmxpc3QtaXRlbSB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgbGluZS1oZWlnaHQ6IEB0aWxlLWhlaWdodC1taW47XG4gICAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgLy8gVGhlIG1ldGEgaW5mb3JtYXRpb24gZGl2IGluIHRoZSBleHRlbmRlZCBmaWxlIGxpc3RcbiAgICAgIGRpdi5tZXRhIHtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgaGVpZ2h0OiBAdGlsZS1oZWlnaHQtbWluO1xuICAgICAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcblxuICAgICAgICAvLyBTbWFsbCBpbmZvIGJsb2NrcyBpbnNpZGUgdGhlIGZpbGUgbWV0YVxuICAgICAgICAuZGF0ZSwgLmlkLCAudGFncywgLnRleC1pbmRpY2F0b3IsXG4gICAgICAgIC5kaXJlY3RvcmllcywgLmZpbGVzIHtcbiAgICAgICAgICBmb250LXNpemU6NzUlO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6NHB4O1xuICAgICAgICAgIHBhZGRpbmc6MnB4IDRweDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9wdGlvbmFsIHRhcmdldCBwcm9ncmVzcyBtZXRlciwgaWYgYSB0YXJnZXQgaGFzIGJlZW4gc2V0XG4gICAgICAgIC50YXJnZXQtcHJvZ3Jlc3MtaW5kaWNhdG9yIHtcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICAgIG1hcmdpbjogMCA0cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVaKC05MGRlZyk7IC8vIEJlZ2lubmluZyBtdXN0IGJlIGF0IHRoZSB0b3BcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwLmZpbGVuYW1lIHtcbiAgICAgICAgLy8gUHJldmVudCBsaW5lIGJyZWFraW5nIGluIHRoZSB0aXRsZXMgYW5kIGdpdmUgYSBsaXR0bGUgc3BhY2luZ1xuICAgICAgICAvLyBiZWZvcmUgYW5kIGFmdGVyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBsaW5lLWhlaWdodDogQHRpbGUtaGVpZ2h0LW1pbjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICB9XG5cbiAgICAgIC8qIFRhZ2xpc3Qgc3R1ZmYgKi9cbiAgICAgIC50YWdsaXN0IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiBAdGFnLXNpemU7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgdHJhbnNpdGlvbjogMC4ycyB3aWR0aCBlYXNlO1xuXG4gICAgICAgIC50YWcge1xuICAgICAgICAgIGhlaWdodDogQHRhZy1zaXplO1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgdHJhbnNpdGlvbjogMC4ycyBhbGwgZWFzZS1vdXQ7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiAwLjJzIHdpZHRoIGVhc2U7XG5cbiAgICAgICAgICAudGFnIHtcbiAgICAgICAgICAgIHdpZHRoOiBAdGFnLXNpemU7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiBAdGFnLXNpemUgLyAyO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogMC4ycyBhbGwgZWFzZS1pbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAudGFnc3BhY2VyIHtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICAgICAudGFnIHtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCB3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB3aGl0ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAudGFnc3BhY2VyOm9ubHktY2hpbGQgLnRhZyB7XG4gICAgICAgICAgd2lkdGg6IEB0YWctc2l6ZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiBAdGFnLXNpemUgLyAyO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRhZ3NwYWNlcjpmaXJzdC1jaGlsZCAudGFnIHtcbiAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiBAdGFnLXNpemUgLyAyO1xuICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IEB0YWctc2l6ZSAvIDI7XG4gICAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCB3aGl0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC50YWdzcGFjZXI6bGFzdC1jaGlsZCAudGFnIHtcbiAgICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogQHRhZy1zaXplIC8gMjtcbiAgICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogQHRhZy1zaXplIC8gMjtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCB3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmLmRpcmVjdG9yeSB7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgICAgICAgLnNvcnRlciB7XG4gICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6MDtcbiAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgYm90dG9tOjA7XG4gICAgICAgICAgcmlnaHQ6MDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgICBtYXJnaW46MDtcblxuICAgICAgICAgIC5zb3J0RGlyZWN0aW9uLCAuc29ydFR5cGUge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luOiAzcHg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAvLyBFTkQgbGlzdCBpdGVtXG5cbiAgICAuZW1wdHktZmlsZS1saXN0LCAuZW1wdHktZGlyZWN0b3J5IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogNTAlO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiAyMDAlO1xuICAgIH1cbn1cbiIsIi8vIEdlb21ldHJ5IGZvciB0aGUgdHJlZSB2aWV3XG5cbiNmaWxlLXRyZWUge1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIHRvcDowO1xuICAgIGxlZnQ6MCU7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBib3R0b206MDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgdHJhbnNpdGlvbjowLjNzIGxlZnQgZWFzZTtcblxuICAgICYuaGlkZGVuIHsgbGVmdDotMTAwJTsgfVxuXG4gICAgI2RpcmVjdG9yaWVzLWRpcnMtaGVhZGVyLCAjZGlyZWN0b3JpZXMtZmlsZXMtaGVhZGVyIHtcbiAgICAgIGhlaWdodDogQHJpYmJvbi1oZWlnaHQ7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgICAgbWFyZ2luLXRvcDogQHJpYmJvbi1oZWlnaHQvMjtcblxuICAgICAgY2xyLWljb24ge1xuICAgICAgICB3aWR0aDogMTJweDtcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogM3B4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDNweDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZmlsZW5hbWUge1xuICAgICAgICBsaW5lLWhlaWdodDogQHJpYmJvbi1oZWlnaHQ7XG4gICAgICAgIHBhZGRpbmc6QHJpYmJvbi1wYWRkaW5nO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6NXB4O1xuICAgICAgICBtYXJnaW46NXB4IDBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICAuaXRlbS1pY29uLCAudG9nZ2xlLWljb24ge1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDogMThweDsgLy8gU2l6ZSBvZiBjbHItaWNvbiB3aXRoIHRoZSBtYXJnaW4gb2YgdGhlIGljb25cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5saXN0LWl0ZW0ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmLmRpcmVjdG9yeSAuc29ydGVyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG5cbiAgICAgICAgLnNvcnREaXJlY3Rpb24sIC5zb3J0VHlwZSB7XG4gICAgICAgICAgbWFyZ2luOiA1cHggM3B4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmVtcHR5LXRyZWUge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IC8vIEluZGljYXRlIHRoYXQgdGhlIHVzZXIgY2FuIGNsaWNrIHRoZSBhcmVhXG5cbiAgICAgICAgLmluZm8ge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogNTAlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIvLyBUaGUgY29tYmluZXIgaG9sZHMgdG9nZXRoZXIgcHJldmlldyBhbmQgZGlyZWN0b3JpZXNcblxuI3NpZGViYXIge1xuICAgIHBvc2l0aW9uOmZpeGVkO1xuICAgIHRvcDpAdG9vbGJhci1oZWlnaHQ7XG4gICAgbGVmdDowO1xuICAgIHdpZHRoOjIwJTtcbiAgICBib3R0b206MDtcblxuICAgICNjb21wb25lbnQtY29udGFpbmVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH0gLy8gRW5kIGNvbXBvbmVudCBjb250YWluZXJcblxuICAgICYuZXhwYW5kZWQge1xuICAgICAgICAjZmlsZS10cmVlLCAjZmlsZS1saXN0IHsgd2lkdGg6NTAlOyB9XG5cbiAgICAgICAgI2ZpbGUtbGlzdCB7XG4gICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgICYuaGlkZGVuIHsgbGVmdDo1MCU7IH1cbiAgICAgICAgfVxuXG4gICAgICAgICNmaWxlLXRyZWUge1xuICAgICAgICAgICAgbGVmdDowJTtcbiAgICAgICAgICAgICYuaGlkZGVuIHsgbGVmdDowJTsgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgI2Fycm93LWJ1dHRvbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgei1pbmRleDo0MDA7XG5cbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgIHRvcDoxMHB4O1xuICAgICAgICBsZWZ0OjEwcHg7XG4gICAgICAgIHdpZHRoOjMwcHg7XG4gICAgICAgIGhlaWdodDozMHB4O1xuICAgICAgICB0cmFuc2l0aW9uOjAuNHMgbGVmdCBlYXNlO1xuXG4gICAgICAgICYuaGlkZGVuIHsgbGVmdDotNjBweDsgfVxuICAgIH1cblxuICAgIC8vIFRoZSBkaXJlY3RvcnkncyByZXNpemFibGUgaGFuZGxlclxuICAgICNzaWRlYmFyLXJlc2l6ZSwgI3NpZGViYXItaW5uZXItcmVzaXplciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICB3aWR0aDogMTBweDtcbiAgICAgIHJpZ2h0OiAtMTBweDtcbiAgICAgIHBhZGRpbmc6IDJweDtcbiAgICAgIGN1cnNvcjogZXctcmVzaXplO1xuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0cHgpO1xuICAgICAgfVxuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6MTBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMC40cyBhbGwgZWFzZTtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC40KTtcbiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAuMjUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgI3NpZGViYXItaW5uZXItcmVzaXplciB7XG4gICAgICBsZWZ0OiBjYWxjKDUwJSAtIDVweCk7IC8vIFBvc2l0aW9uIGl0IGV4YWN0bHkgb24gdG9wIG9mIHRoZSBkaXZpZGVyXG4gICAgICByaWdodDogYXV0bztcbiAgICB9XG59XG4iLCIvLyBFZGl0b3IgR2VvbWV0cnlcblxuLy8gRWRpdG9yIG1hcmdpbnMgbGVmdCBhbmQgcmlnaHQgZm9yIGFsbCBicmVha3BvaW50cyBpbiBib3RoIGZ1bGxzY3JlZW4gYW5kXG4vLyBub3JtYWwgbW9kZS5cbkBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tc206ICAgNTBweDtcbkBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tbWQ6ICAxMDBweDtcbkBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tbGc6ICAxNTBweDtcbkBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4teGw6ICAyMDBweDtcbkBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4teHhsOiAzNTBweDtcblxuQGVkaXRvci1tYXJnaW4tbm9ybWFsLXNtOiAgMjBweDtcbkBlZGl0b3ItbWFyZ2luLW5vcm1hbC1tZDogIDUwcHg7XG5AZWRpdG9yLW1hcmdpbi1ub3JtYWwtbGc6IDEwMHB4O1xuXG4jZWRpdG9yIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IEB0b29sYmFyLWhlaWdodDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogY2FsYygyMCUgKyAxMHB4KTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuXG4gICYuZnVsbHNjcmVlbiB7XG4gICAgbGVmdDogMCU7IHBhZGRpbmctbGVmdDogMHB4O1xuXG4gICAgLy8gSGlkZSB0aGUgdGFicyBpbiBkaXN0cmFjdGlvbi1mcmVlXG4gICAgI2RvY3VtZW50LXRhYnMgeyBkaXNwbGF5OiBub25lOyB9XG4gIH1cblxuICAvLyBKUVVFUlkgVUkgLSBUSEVNRSAobmVjZXNzYXJ5IGZvciByZXNpemFibGUgdG8gd29yaylcbiAgLnVpLXJlc2l6YWJsZS1oYW5kbGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDAuMXB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnVpLXJlc2l6YWJsZS1kaXNhYmxlZCAudWktcmVzaXphYmxlLWhhbmRsZSxcbiAgLnVpLXJlc2l6YWJsZS1hdXRvaGlkZSAudWktcmVzaXphYmxlLWhhbmRsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC51aS1yZXNpemFibGUtdyB7XG4gICAgY3Vyc29yOiBldy1yZXNpemU7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZzogMnB4O1xuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiA2cHg7XG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDRweCk7XG4gICAgfVxuICB9XG5cbiAgICAuQ29kZU1pcnJvciB7XG4gICAgICAvLyBUaGUgQ29kZU1pcnJvciBlZGl0b3IgbmVlZHMgdG8gcmVzcGVjdCB0aGUgbmV3IHRhYmJhcjsgaXQgY2Fubm90IHRha2VcbiAgICAgIC8vIHVwIDEwMCAlIGFsbCBmb3IgaXRzZWxmIGFueW1vcmUuXG4gICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIEB0YWJiYXItaGVpZ2h0KTtcbiAgICAgIG1hcmdpbi10b3A6IEB0YWJiYXItaGVpZ2h0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuNWVtO1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6IDEwMjVweCkgeyBtYXJnaW4tbGVmdDogQGVkaXRvci1tYXJnaW4tbm9ybWFsLWxnOyB9XG4gICAgICBAbWVkaWEobWF4LXdpZHRoOiAxMDI0cHgpIHsgbWFyZ2luLWxlZnQ6IEBlZGl0b3ItbWFyZ2luLW5vcm1hbC1tZDsgfVxuICAgICAgQG1lZGlhKG1heC13aWR0aDogIDkwMHB4KSB7IG1hcmdpbi1sZWZ0OiBAZWRpdG9yLW1hcmdpbi1ub3JtYWwtc207IH1cbiAgICB9XG5cbiAgICAuQ29kZU1pcnJvci1jb2RlIHtcbiAgICAgIG1hcmdpbjogNWVtIDBlbTtcbiAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMjRweCkgeyBtYXJnaW46IEBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tbWQgMGVtOyB9XG5cbiAgICAgIC5tdXRlIHsgb3BhY2l0eTowLjI7IH1cbiAgICB9XG5cbiAgICAuQ29kZU1pcnJvci1zY3JvbGwge1xuICAgICAgcGFkZGluZy1yaWdodDogNWVtO1xuICAgICAgQG1lZGlhKG1pbi13aWR0aDogMTAyNXB4KSB7IHBhZGRpbmctcmlnaHQ6IEBlZGl0b3ItbWFyZ2luLW5vcm1hbC1sZzsgfVxuICAgICAgQG1lZGlhKG1heC13aWR0aDogMTAyNHB4KSB7IHBhZGRpbmctcmlnaHQ6IEBlZGl0b3ItbWFyZ2luLW5vcm1hbC1tZDsgfVxuICAgICAgQG1lZGlhKG1heC13aWR0aDogIDkwMHB4KSB7IHBhZGRpbmctcmlnaHQ6IEBlZGl0b3ItbWFyZ2luLW5vcm1hbC1zbTsgfVxuICAgICAgb3ZlcmZsb3cteDpoaWRkZW4gIWltcG9ydGFudDsgLy8gTmVjZXNzYXJ5IHRvIGhpZGUgdGhlIGhvcml6b250YWwgc2Nyb2xsYmFyXG5cbiAgICAgIC8vIFdlIG5lZWQgdG8gb3ZlcnJpZGUgYSBuZWdhdGl2ZSBtYXJnaW5cbiAgICAgIC8vIGFuZCBhIGJvdHRvbSBwYWRkaW5nIGZyb20gdGhlIHN0YW5kYXJkXG4gICAgICAvLyBDU1MgZm9yIHNvbWUgY2FsY3VsYXRpb25zIHRvIGJlIGNvcnJlY3RcbiAgICAgIC8vIHN1Y2ggYXMgdGhlIHRhYmxlIGVkaXRvclxuICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDBweDtcbiAgICB9XG5cbiAgICAvLyBSZWR1Y2UgZm9udCBzaXplIG9mIG1hdGggYSBiaXRcbiAgICAua2F0ZXggeyBmb250LXNpemU6IDEuMWVtOyB9XG4gIH1cblxuXG4vLyBDb2RlTWlycm9yIGZ1bGxzY3JlZW5cbi5Db2RlTWlycm9yLWZ1bGxzY3JlZW4ge1xuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDsgLy8gSGF2ZSB0byBvdmVycmlkZSBhbm90aGVyIHJlbGF0aXZlXG4gIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50OyAvLyBOb3JtYWxseSAyNXB4IGZvciB0YWIgYmFyLCBidXQgbm90IGluIGRpc3RyYWN0aW9uIGZyZWVcbiAgdG9wOiBAdG9vbGJhci1oZWlnaHQ7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogYXV0bztcbiAgei1pbmRleDogNTAwO1xuXG4gIEBtZWRpYShtaW4td2lkdGg6IDEzMDFweCkgeyBtYXJnaW4tbGVmdDogQGVkaXRvci1tYXJnaW4tZnVsbHNjcmVlbi14eGwgIWltcG9ydGFudDsgfVxuICBAbWVkaWEobWF4LXdpZHRoOiAxMzAwcHgpIHsgbWFyZ2luLWxlZnQ6IEBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4teGwgICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhKG1heC13aWR0aDogMTEwMHB4KSB7IG1hcmdpbi1sZWZ0OiBAZWRpdG9yLW1hcmdpbi1mdWxsc2NyZWVuLWxnICAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCkgeyBtYXJnaW4tbGVmdDogQGVkaXRvci1tYXJnaW4tZnVsbHNjcmVlbi1tZCAgIWltcG9ydGFudDsgfVxuICBAbWVkaWEobWF4LXdpZHRoOiAgODAwcHgpIHsgbWFyZ2luLWxlZnQ6IEBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tc20gICFpbXBvcnRhbnQ7IH1cblxuICAuQ29kZU1pcnJvci1zY3JvbGwge1xuICAgIEBtZWRpYShtaW4td2lkdGg6IDEzMDFweCkgeyBwYWRkaW5nLXJpZ2h0OiBAZWRpdG9yLW1hcmdpbi1mdWxsc2NyZWVuLXh4bCAhaW1wb3J0YW50OyB9XG4gICAgQG1lZGlhKG1heC13aWR0aDogMTMwMHB4KSB7IHBhZGRpbmctcmlnaHQ6IEBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4teGwgICFpbXBvcnRhbnQ7IH1cbiAgICBAbWVkaWEobWF4LXdpZHRoOiAxMTAwcHgpIHsgcGFkZGluZy1yaWdodDogQGVkaXRvci1tYXJnaW4tZnVsbHNjcmVlbi1sZyAgIWltcG9ydGFudDsgfVxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDEwMDBweCkgeyBwYWRkaW5nLXJpZ2h0OiBAZWRpdG9yLW1hcmdpbi1mdWxsc2NyZWVuLW1kICAhaW1wb3J0YW50OyB9XG4gICAgQG1lZGlhKG1heC13aWR0aDogIDgwMHB4KSB7IHBhZGRpbmctcmlnaHQ6IEBlZGl0b3ItbWFyZ2luLWZ1bGxzY3JlZW4tc20gICFpbXBvcnRhbnQ7IH1cbiAgfVxufVxuXG4vLyBEZWZpbmUgdGhlIHJlYWRhYmlsaXR5IGNsYXNzZXNcbi5jbS1yZWFkYWJpbGl0eS0wICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoMTAwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS0xICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDkwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS0yICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDgwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS0zICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDcwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS00ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDYwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS01ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDUwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS02ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDQwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS03ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDMwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS04ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoIDEwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS05ICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoICAwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbi5jbS1yZWFkYWJpbGl0eS0xMCAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBoc3YoMzUwLCA3MCUsIDk1JSk7IGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7IH1cbiIsIi8vIERvY3VtZW50IFRhYiBiYXIgKG92ZXIgdGhlIGVkaXRvcilcblxuI2RvY3VtZW50LXRhYnMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGhlaWdodDogQHRhYmJhci1oZWlnaHQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuXG4gIC8vIEluIGNhc2Ugb2YgYW4gb3ZlcmZsb3csIGhpZGUgdGhlIHNjcm9sbGJhciBzbyB0aGF0IHNjcm9sbGluZyBsZWZ0L3JpZ2h0XG4gIC8vIHJlbWFpbnMgcG9zc2libGUsIGJ1dCBubyB0aGljYyBzY3JvbGxiYXIgaW4gdGhlIHdheSFcbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXIgeyBkaXNwbGF5OiBub25lOyB9XG5cbiAgLm5vLWZpbGVzIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxpbmUtaGVpZ2h0OiBAdGFiYmFyLWhlaWdodDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAuZG9jdW1lbnQge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWluLXdpZHRoOiAyMDBweDtcbiAgICBsaW5lLWhlaWdodDogQHRhYmJhci1oZWlnaHQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiBAdGFiYmFyLWhlaWdodDsgLy8gUHVzaCB0aGUgZmlsZW5hbWUgYmFja1xuXG4gICAgLmZpbGVuYW1lIHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwcHg7XG4gICAgICB0b3A6IDBweDtcbiAgICAgIHJpZ2h0OiBAdGFiYmFyLWhlaWdodDsgLy8gRG9uJ3Qgb3ZlcmxheSB0aGUgY2xvc2UgYnV0dG9uXG4gICAgICBwYWRkaW5nLWxlZnQ6IDJweDtcbiAgICB9XG5cbiAgICAvLyBNYXJrIG1vZGlmaWNhdGlvbiBzdGF0dXMgY2xhc3NpY2FsbHlcbiAgICAmLm1vZGlmaWVkIC5maWxlbmFtZTo6YmVmb3JlIHsgY29udGVudDogJyogJyB9XG5cbiAgICAuY2xvc2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIHRvcDogMHB4O1xuICAgICAgd2lkdGg6IEB0YWJiYXItaGVpZ2h0O1xuICAgICAgaGVpZ2h0OiBAdGFiYmFyLWhlaWdodDtcbiAgICAgIGxpbmUtaGVpZ2h0OiBAdGFiYmFyLWhlaWdodDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IEB0YWJiYXItaGVpZ2h0O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gQ09ERU1JUlJPUiBTVFlMSU5HXG5cbi8vIERvbid0IHVzZSB0ZXh0IGN1cnNvciBvbiB0aGUgc2Nyb2xsYmFyXG4uQ29kZU1pcnJvci12c2Nyb2xsYmFyIHsgY3Vyc29yOmRlZmF1bHQ7IH1cblxuLkNvZGVNaXJyb3Ige1xuICAvLyBUaGUgdGV4dGFyZWEgZWxlbWVudCBuZWVkcyB0byBoYXZlIHRoZSBzYW1lXG4gIC8vIGZvbnQtc2l6ZSBhcyB0aGUgZWRpdG9yLCBldmVuIHRob3VnaCBpdCBpc1xuICAvLyBoaWRkZW4uIFRoaXMgd2F5LCBwb3AtdXBzIGZvciBub24td2VzdGVyblxuICAvLyBmb250cyBzdWNoIGFzIEhpcmFnYW5hL0thdGFrYW5hIGFyZSBjb3JyZWN0bHlcbiAgLy8gYWxpZ25lZC4gU2hvdWxkIGFsc28gaGVscCBhY2Nlc3NpYmlsaXR5LXBsdWdpbnMuXG4gICYuQ29kZU1pcnJvci13cmFwID4gZGl2OmZpcnN0LWNoaWxkIHtcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgaGVpZ2h0OiAxLjQzNzVlbSAhaW1wb3J0YW50O1xuICAgICAgYm90dG9tOiAtMS40Mzc1ZW0gIWltcG9ydGFudDtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVZKDEuMSk7XG4gICAgfVxuICB9XG5cbiAgbGluZS1oZWlnaHQ6IDEuNDM3NTtcbiAgdXNlci1zZWxlY3Q6IHRleHQ7XG4gIC8vIG1hcmdpbi1ib3R0b206IC1AdGFiYmFyLWhlaWdodDsgLy8gSSBoYXRlIG15c2VsZiBmb3IgdGhpc1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0OyAvLyBPdmVycmlkZSB0aGUgY29kZW1pcnJvci5jc3MgZGVmYXVsdFxuXG4gIC8vIFRoaXMgZGlyZWN0aXZlIHByZXZlbnRzIHN0cmFuZ2UgY29sb3VyIGFydGlmYWN0cyB3aGVuIGEgZG9jdW1lbnQgaXMgb3BlblxuICAvLyB0aGF0IGhhcyBsZXNzIGxpbmVzIG9mIGNvZGUgdGhhbiBmaXQgaW50byB0aGUgd2luZG93IChlc3BlY2lhbGx5IG5vdGFibGVcbiAgLy8gaW4gZGFyayBtb2RlLCBhcyB0aGUgc2l6ZXIgaXMgdmlzaWJsZSB3aXRoIGEgc21hbGwgZ3JlZW4gaGFsbykuXG4gIC5Db2RlTWlycm9yLXNpemVyIHsgaGVpZ2h0OiAxMDAlOyB9XG5cbiAgJi5Db2RlTWlycm9yLWVtcHR5IHtcbiAgICAvLyBJZiB0aGUgZWRpdG9yIGlzIGVtcHR5LCBkaXNwbGF5IGEgbmljZSBiYWNrZ3JvdW5kIGltYWdlXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvZmVhdGhlci5zdmcnKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIC8vIEluIHRoZSBlZGl0b3IubGVzcywgd2UndmUgZGVmaW5lZCA1ZW0gdG9wIG1hcmdpbiBvbiB0aGUgY29kZSBlbGVtZW50XG4gICAgLy8gd2hpY2ggaXQgbm90IHByZXNlbnQgaW4gYW4gZW1wdHkgZWRpdG9yLiBUaGVyZWZvcmUsIHdlIG5lZWQgdG8gYXBwbHlcbiAgICAvLyBpdCB0byB0aGUgd2hvbGUgY29udGVudCBpbiBjYXNlIG9mIGFuIGVtcHR5IGVkaXRvci5cbiAgICBwYWRkaW5nLXRvcDogNWVtO1xuICB9XG5cbiAgcHJlIHsgcGFkZGluZzowOyB9XG5cbiAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gICAgbWFyZ2luOiAwLjJlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG5cbiAgLnNlYXJjaC1yZXN1bHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdyAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmNtLXRhYmxlIHtcbiAgICBmb250LWZhbWlseTogQGZvbnQtY29kZTtcbiAgICBmb250LXdlaWdodDpib2xkO1xuICB9XG5cbiAgLnNpemUtaGVhZGVyLTEge1xuICAgIGZvbnQtc2l6ZToyZW07XG4gICAgLkNvZGVNaXJyb3ItZ3V0dGVyLWVsdCB7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgfVxuICB9XG4gIC5zaXplLWhlYWRlci0yIHtcbiAgICBmb250LXNpemU6MS44ZW07XG4gICAgLkNvZGVNaXJyb3ItZ3V0dGVyLWVsdCB7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgfVxuICB9XG4gIC5zaXplLWhlYWRlci0zIHtcbiAgICBmb250LXNpemU6MS41ZW07XG4gICAgLkNvZGVNaXJyb3ItZ3V0dGVyLWVsdCB7IGxpbmUtaGVpZ2h0OiAxLjRlbTsgfVxuICB9XG4gIC5zaXplLWhlYWRlci00IHtcbiAgICBmb250LXNpemU6MS4zZW07XG4gICAgLkNvZGVNaXJyb3ItZ3V0dGVyLWVsdCB7IGxpbmUtaGVpZ2h0OiAxLjNlbTsgfVxuICB9XG4gIC5zaXplLWhlYWRlci01IHsgZm9udC1zaXplOjFlbTsgfVxuICAuc2l6ZS1oZWFkZXItNiB7IGZvbnQtc2l6ZToxZW07IH1cblxuICAuY20tY29tbWVudCxcbiAgLmNtLWZvcm1hdHRpbmctdGFzayxcbiAgLmNtLWZlbmNlZC1jb2RlIHsgZm9udC1mYW1pbHk6IEBmb250LWNvZGU7IH1cblxuICAuQ29kZU1pcnJvci1jdXJzb3Ige1xuICAgIHdpZHRoOiAycHg7XG4gICAgYm9yZGVyOiAwO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYW5pbWF0aW9uOiBzb2Z0LWJsaW5rIEBjdXJzb3ItYmxpbmstcmF0ZSBpbmZpbml0ZTsgLy8gVXNlIHRoZSBcInNvZnQtYmxpbmtcIiBhbmltYXRpb25cbiAgfVxuXG4gIC8qIEltcGxlbWVudCBhIFwiZmF0XCIgY3Vyc29yIGZvciBXaW5kb3dzJyBvdmVyd3JpdGUgbW9kZSAoSW5zIGtleSkgKi9cbiAgLy8gQWxzbyB2YWxpZCBmb3IgdmltIGFuZCBldmVyeXRoaW5nIHRoYXQgbmVlZHMgYSBibG9jayBjdXJzb3IuXG4gIC5Db2RlTWlycm9yLW92ZXJ3cml0ZSAuQ29kZU1pcnJvci1jdXJzb3IsICYuY20tZmF0LWN1cnNvciAuQ29kZU1pcnJvci1jdXJzb3Ige1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjMzMzO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMzMzO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIH1cblxuICAvKiBNYWtlIHRoZSBmb3JtYXR0aW5nIGNoYXJhY3RlcnMgYW5kIGVzY2FwZSBzZXF1ZW5jZXMgbmVhcmx5IGludmlzaWJsZSAqL1xuICAuY20tZm9ybWF0dGluZy1jb2RlLFxuICAuY20tZm9ybWF0dGluZy1jb2RlLWJsb2NrLFxuICAuY20tZm9ybWF0dGluZy1xdW90ZSxcbiAgLmNtLWZvcm1hdHRpbmctc3Ryb25nLFxuICAuY20tZm9ybWF0dGluZy1lbSxcbiAgLmNtLXprbi1saW5rLWZvcm1hdHRpbmcsXG4gIC5jbS1lc2NhcGUtY2hhciB7IG9wYWNpdHk6LjM7IH1cblxuICAuY20tZm9ybWF0dGluZy1xdW90ZSxcbiAgLmNtLWZvcm1hdHRpbmctbGlzdC11bCxcbiAgLmNtLWZvcm1hdHRpbmctbGlzdC1vbCB7XG4gICAgZm9udC1mYW1pbHk6IEBmb250LWNvZGU7XG4gIH1cblxuICAjbWVhc3VyZVdpZHRoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB3aWR0aDogYXV0bztcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG5cbiAgI21lYXN1cmVNb25vV2lkdGgge1xuICAgIGZvbnQtZmFtaWx5OiBAZm9udC1jb2RlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cblxuICAuY20tdGFiIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gIH1cblxuICAuY20tdXJsLCAuY20tbGluayB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4gIC8vIE1ldGEta2V5IGFkYXB0aW9uc1xuICAuY20temtuLXRhZy5tZXRhLWtleSwgLmNtLXprbi1saW5rLm1ldGEta2V5LCAuY21hLm1ldGEta2V5IHsgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jbS16a24tdGFnLm1ldGEta2V5OmhvdmVyLFxuICAuY20temtuLWxpbmsubWV0YS1rZXk6aG92ZXIsXG4gIGEuY21hIHsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxuICAuY20temtuLXRhZyB7IGZvbnQtd2VpZ2h0OmJvbGQ7IH1cblxuICAvLyBUZXh0LWZvbGRpbmcgcmVsYXRlZCBzdHVmZlxuICAuQ29kZU1pcnJvci1ndXR0ZXJzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgd2lkdGg6IDJlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICB9XG4gIC5Db2RlTWlycm9yLWZvbGRndXR0ZXIge1xuICAgIHdpZHRoOiAyZW07XG4gIH1cbiAgLkNvZGVNaXJyb3ItZm9sZGd1dHRlci1vcGVuLCAuQ29kZU1pcnJvci1mb2xkZ3V0dGVyLWZvbGRlZCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogMThweDtcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6IHZhcigtLWMtcHJpbWFyeSk7XG4gICAgfVxuICB9XG4gIC5Db2RlTWlycm9yLWZvbGRndXR0ZXItb3BlbjphZnRlciB7IGNvbnRlbnQ6IFwiXFwyNUJFXCI7IH1cbiAgLkNvZGVNaXJyb3ItZm9sZGd1dHRlci1mb2xkZWQ6YWZ0ZXIgeyBjb250ZW50OiBcIlxcMjVCOFwiOyB9XG5cbiAgLkNvZGVNaXJyb3ItZm9sZG1hcmtlciB7XG4gICAgYm9yZGVyLXJhZGl1czpAYm9yZGVyLXJhZGl1cztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZzoycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgfVxufVxuXG4uaGVhZGluZy10YWcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogQGJvcmRlci1yYWRpdXM7XG4gIHBhZGRpbmc6IDAgNHB4O1xuXG4gIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG59XG5cbi8vIEhpbnRzICh0YWcgYXV0b2NvbXBsZXRpb24sIGV0Yy4pXG4uQ29kZU1pcnJvci1oaW50cyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwcHg7XG5cbiAgbWF4LWhlaWdodDogMjBlbTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgbGkuQ29kZU1pcnJvci1oaW50IHtcbiAgICBtYXJnaW46IDA7XG4gICAgd2hpdGUtc3BhY2U6IHByZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICB9XG5cbiAgLy8gQXBwbHkgYSBib2xkZXIgZm9udCB3ZWlnaHQgdG8gdGFncyB0aGF0IGhhdmUgYSBzcGVjaWZpYyBjb2xvdXIgYXNzaWduZWQuXG4gIC5jbS1oaW50LWNvbG91ciB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG59XG4iLCIvLyBRdWlja2xvb2sgYW5kIFByaW50IHdpbmRvdyBvcHRpb25zXG5cbi5xdWlja2xvb2stc3RhbmRhbG9uZSwgLnByaW50LXdpbmRvdyB7XG4gICAgcG9zaXRpb246Zml4ZWQ7XG5cbiAgICAudGl0bGUge1xuICAgICAgICAvLyBUaXRsZSBiYXIgb3B0aW9uc1xuICAgICAgICBjdXJzb3I6LXdlYmtpdC1ncmFiO1xuICAgICAgICAtd2Via2l0LWFwcC1yZWdpb246IGRyYWc7XG5cbiAgICAgICAgaGVpZ2h0OiBAdGl0bGUtYmFyLWhlaWdodDtcbiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogQGJvcmRlci1yYWRpdXM7XG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBAYm9yZGVyLXJhZGl1cztcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzowO1xuICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuXG4gICAgICAgIGgxIHtcbiAgICAgICAgICAgIGZsZXgtZ3Jvdzo1O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgcGFkZGluZzogMCAxZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogQHRpdGxlLWJhci1oZWlnaHQ7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB9XG5cbiAgICAgICAgLmZpbmQge1xuICAgICAgICAgIC13ZWJraXQtYXBwLXJlZ2lvbjogbm8tZHJhZztcbiAgICAgICAgICBmbGV4LWdyb3c6NDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgd2lkdGg6MzAlO1xuICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgbWFyZ2luOjA7XG5cbiAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgcGFkZGluZzowLjJlbSAxZW07XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBAdGl0bGUtYmFyLWhlaWdodDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBJbml0aWFsaXNlIHByaW50LWJ1dHRvbi5cbiAgICAjaW5pdC1wcmludCB7XG4gICAgICBwYWRkaW5nOiBAdGl0bGUtYmFyLWhlaWdodCAqIDAuNDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIC13ZWJraXQtYXBwLXJlZ2lvbjogbm8tZHJhZztcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgaGVpZ2h0OiBAdGl0bGUtYmFyLWhlaWdodDtcbiAgICB9XG5cbiAgICAuYm9keSAuQ29kZU1pcnJvciB7XG4gICAgICAgIGN1cnNvcjp0ZXh0O1xuICAgICAgICBmb250LXNpemU6MWVtO1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgcGFkZGluZzowLjNlbTtcbiAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IEBib3JkZXItcmFkaXVzO1xuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogQGJvcmRlci1yYWRpdXM7XG4gICAgfVxuXG4gICAgLkNvZGVNaXJyb3Itc2Nyb2xsIC5Db2RlTWlycm9yLXNpemVyIHsgbWFyZ2luLWJvdHRvbToxZW07IH1cblxuICAgIC8vIENvZGVNaXJyb3IgaW5zaWRlIFF1aWNrbG9vayBzdGFuZGFsb25lIHdpbmRvd3MgbmVlZCBhbm90aGVyIHRvcC1kaXN0YW5jZVxuICAgIC5xdWlja2xvb2stc3RhbmRhbG9uZSAjZWRpdG9yIHsgdG9wOiBAdG9vbGJhci1oZWlnaHQ7IH1cblxuICAgIC5wcmludC13aW5kb3cgLmNvbnRlbnQge1xuICAgICAgdG9wOiBAdG9vbGJhci1oZWlnaHQ7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDoxMDAlO1xuICAgIH1cbn1cblxuLy8gQ3VzdG9tIG1hcmdpbnMgZm9yIGRpZmZlcmVudCBwbGF0Zm9ybXNcbmJvZHkge1xuICAmLmRhcndpbiAucXVpY2tsb29rLXN0YW5kYWxvbmUgLnRpdGxlLCAmLmRhcndpbiAucHJpbnQtd2luZG93IC50aXRsZSB7IHBhZGRpbmctbGVmdDogNzBweDsgfVxuICAmLndpbjMyIC5xdWlja2xvb2stc3RhbmRhbG9uZSAudGl0bGUsICYud2luMzIgLnByaW50LXdpbmRvdyAudGl0bGUgeyBwYWRkaW5nLXJpZ2h0OiAxNDBweDsgfVxuICAmLmxpbnV4IC5xdWlja2xvb2stc3RhbmRhbG9uZSAudGl0bGUsICYubGludXggLnByaW50LXdpbmRvdyAudGl0bGUgeyBwYWRkaW5nLXJpZ2h0OiAxMDBweDsgfVxufVxuIiwiLy8gVGhpcyBmaWxlIGhvbGRzIGFsbCBnZW9tZXRyeSBmb3IgdGhlIFpldHRsciB0b29sYmFyXG5cbiN0b29sYmFyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOjA7XG4gICAgbGVmdDowO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OkB0b29sYmFyLWhlaWdodDtcbiAgICBwYWRkaW5nOjA7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcblxuICAgIC8vIFdlIGRvbid0IGhhdmUgd2luZG93IGNocm9tZSwgc28gd2UgbmVlZCB0aGUgdG9vbGJhciB0byBiZSBkcmFnZ2FibGUuXG4gICAgLXdlYmtpdC1hcHAtcmVnaW9uOiBkcmFnO1xuXG4gICAgJiA+IC5zZWFyY2hiYXIsICYgPiAuZmlsZS1pbmZvLCAmID4gLmJ1dHRvbiwgJiA+IHN2Zzpub3QoI3NlYXJjaC1wcm9ncmVzcy1pbmRpY2F0b3IpIHtcbiAgICAgIC13ZWJraXQtYXBwLXJlZ2lvbjogbm8tZHJhZztcblxuICAgICAgJjpmb2N1cyB7IG91dGxpbmU6IDA7IH1cbiAgICB9XG5cblxuICAgIC5idXR0b24ge1xuICAgICAgICBmbGV4LWdyb3c6IDAuMTtcbiAgICAgICAgb3V0bGluZTogMDtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogQGJ1dHRvbi1zaXplO1xuICAgICAgICBoZWlnaHQ6IEBidXR0b24tc2l6ZTtcbiAgICAgICAgbWFyZ2luOiBAYnV0dG9uLW1hcmdpbjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogQGJvcmRlci1yYWRpdXM7IC8vIENvbnRyb2wgdGhlIHJhZGl1cyB3aXRoIHRoZSBtYXJnaW4gdmFyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgICAgICYgY2xyLWljb24ge1xuICAgICAgICAgICAgd2lkdGg6IEBidXR0b24taWNvbi1zaXplO1xuICAgICAgICAgICAgaGVpZ2h0OiBAYnV0dG9uLWljb24tc2l6ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQgeyBtYXJnaW4tbGVmdDpAdG9vbGJhci1tYXJnaW4gKiAyOyB9XG4gICAgICAgICY6bGFzdC1jaGlsZCB7IG1hcmdpbi1yaWdodDpAdG9vbGJhci1tYXJnaW4gKiAyOyB9XG5cbiAgICAgICAgLy8gUG9tb2Rvcm8gbWV0ZXJcbiAgICAgICAgJi5wb21vZG9ybyB7XG4gICAgICAgICAgICBwYWRkaW5nOjJweDtcbiAgICAgICAgICAgIC8vIERvbid0IGRpc3BsYXkgYXMgYnV0dG9uXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOm5vbmU7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcblxuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGluaGVyaXQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc3BhY2VyIHsgZmxleC1ncm93OjU7IH1cblxuICAgIC5zZXBhcmF0b3Ige1xuICAgICAgICBmbGV4LWdyb3c6MC4zO1xuICAgICAgICB3aWR0aDoxcHg7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuXG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwifFwiO1xuICAgICAgICAgICAgZGlzcGxheTppbmxpbmU7XG4gICAgICAgICAgICBmb250LXNpemU6QGZvbnQtc2l6ZS1iaWc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuZmlsZS1pbmZvIHtcbiAgICAgICAgZmxleC1ncm93OjU7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDpAdG9vbGJhci1oZWlnaHQ7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxZW07XG4gICAgfVxuXG4gICAgLnNlYXJjaGJhciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZmxleC1ncm93OjU7XG5cbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgaGVpZ2h0OkBidXR0b24tc2l6ZTtcbiAgICAgICAgICAgIHdpZHRoOjkwJTsgLy8gRmlsbCBvdXQgdGhlIHdob2xlIHNwYWNlXG4gICAgICAgICAgICBsaW5lLWhlaWdodDpAYnV0dG9uLXNpemU7XG4gICAgICAgICAgICBwYWRkaW5nOjAuMmVtIDFlbTtcbiAgICAgICAgICAgIG1hcmdpbjpAYnV0dG9uLW1hcmdpbjtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6QGJ1dHRvbi1tYXJnaW47XG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgZGl2LmVuZC1zZWFyY2gge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiBAYnV0dG9uLW1hcmdpbjtcbiAgICAgICAgICAgIHJpZ2h0OiBAYnV0dG9uLW1hcmdpbiArIEBidXR0b24tc2l6ZTtcbiAgICAgICAgICAgIGhlaWdodDogQGJ1dHRvbi1zaXplO1xuICAgICAgICAgICAgd2lkdGg6IEBidXR0b24tc2l6ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBmb250LXNpemU6IDgwJTtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWMtcHJpbWFyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIEZvciBtYWNPUywgd2UgbmVlZCB0byBhZGQgc29tZSBtb3JlIG1hcmdpblxuYm9keS5kYXJ3aW4gI3Rvb2xiYXIge1xuICBwYWRkaW5nLWxlZnQ6IDcwcHg7XG59XG5cbi8vIEZvciBXaW5kb3dzIGFuZCBMaW51eCB0aGUgc2FtZSwgb25seSBvbiB0aGUgb3RoZXIgc2lkZVxuYm9keS53aW4zMiAjdG9vbGJhciwgYm9keS5saW51eCAjdG9vbGJhciB7XG4gIHBhZGRpbmctcmlnaHQ6IDE0MHB4OyAvLyBXaW5kb3dzIHdpbmRvdyBjb250cm9scyBhcmUgLi4uIGh1Z2UuXG59XG4iLCIvLyBUaGlzIGZpbGUgaXMgc28gc3dlZXQgSSBjYW4ndCBkZXNjcmliZSBpdFxuXG4ubm90aWZ5IHtcbiAgICBwb3NpdGlvbjpmaXhlZDtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIHJpZ2h0OjE1cHg7XG4gICAgbWFyZ2luOjA7XG4gICAgcGFkZGluZzoxMHB4O1xuICAgIC8vIENvbnN0cmFpbiB0aGUgc2l6ZSBvZiB0aGVzZSB0aGluZ3NcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjdXJzb3I6ZGVmYXVsdDtcbn1cbiIsIi8vIFBvcHVwIHJlbGF0ZWQgY3NzIGNsYXNzZXNcblxuLyogKiAqICogKiAqICogKiAqICogKiAqICogKlxuICogICAgICAgICAgICAgICAgICAgICAgICAgKlxuICogICBCRUdJTiBWQVJJQUJMRVMgQVJFQSAgKlxuICogICAgICAgICAgICAgICAgICAgICAgICAgKlxuICogKiAqICogKiAqICogKiAqICogKiAqICogKi9cblxuQHNpemUtc2hhcmUtYnV0dG9uczogNDZweDtcbkBzaXplLWljb24tYnV0dG9uczogIDI1cHg7XG5cbi8qICogKiAqICogKiAqICogKiAqICogKiAqICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgIEVORCBWQVJJQUJMRVMgQVJFQSAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICogKiAqICogKiAqICogKiAqICogKiAqICovXG5cbi8qICogKiAqICogKiAqICogKiAqICogKiAqICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgICBCRUdJTiBNSVhJTiBBUkVBICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICogKiAqICogKiAqICogKiAqICogKiAqICovXG5cbi8vIE1ha2VzIGEgZGl2IGZsZXgsIGNhbiBiZSB1c2VkIHRvIGdlbmVyYXRlIGEgZ3JpZCBzdHlsZSBidXR0b24gc2V0XG4uZmxleC1idXR0b24tbWl4aW4oQHNpemUpIHtcbiAgZmxleC1ncm93OiAxO1xuICB3aWR0aDogQHNpemU7XG4gIGhlaWdodDogQHNpemU7XG4gIGxpbmUtaGVpZ2h0OiBAc2l6ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiAwLjJzIGFsbCBlYXNlO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qICogKiAqICogKiAqICogKiAqICogKiAqICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICAgICAgRU5EIE1JWElOIEFSRUEgICAgICpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICpcbiAqICogKiAqICogKiAqICogKiAqICogKiAqICovXG5cblxuLnBvcHVwLWFycm93IHtcbiAgd2lkdGg6MDtcbiAgaGVpZ2h0OjA7XG4gIHBvc2l0aW9uOmZpeGVkO1xuXG4gICYudXAge1xuICAgIGJvcmRlci1sZWZ0OiBAYXJyb3ctc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQ6IEBhcnJvdy1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IEBhcnJvdy1zaXplO1xuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuICB9XG4gICYuZG93biB7XG4gICAgYm9yZGVyLWxlZnQ6IEBhcnJvdy1zaXplIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodDogQGFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXRvcC13aWR0aDogQGFycm93LXNpemU7XG4gICAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XG4gIH1cbiAgJi5sZWZ0IHtcbiAgICBib3JkZXItdG9wOiBAYXJyb3ctc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiBAYXJyb3ctc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IEBhcnJvdy1zaXplO1xuICAgIGJvcmRlci1yaWdodC1zdHlsZTogc29saWQ7XG4gIH1cbiAgJi5yaWdodCB7XG4gICAgYm9yZGVyLXRvcDogQGFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogQGFycm93LXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IEBhcnJvdy1zaXplO1xuICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcbiAgfVxufVxuXG4ucG9wdXAge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG1heC13aWR0aDogMzUwcHg7IC8vIE1heGltdW0gd2lkdGguXG4gIG1heC1oZWlnaHQ6IDYwMHB4OyAvLyBNYXhpbXVtIGhlaWdodC4gSWYgaXRzIHRvbyBtdWNoIHNpbXBseSBzY3JvbGwuXG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcblxuICAvLyBUT0MgbGlua3NcbiAgYS50b2MtbGluayB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuXG4gIHAge1xuICAgIG1hcmdpbjogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICB0YWJsZSB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcblxuICAgIHRkIHsgcGFkZGluZzogNHB4OyB9XG4gIH1cblxuICBidXR0b24ge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBmb250LXNpemU6IDIwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAvLyBFbGVtZW50cyBpbnNpZGUgcG9wdXBzXG4gIGZvcm0ge1xuICAgIGlucHV0IHtcbiAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgIGZvbnQtc2l6ZTogMjAwJTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICY6Zm9jdXMgeyBvdXRsaW5lOiAwOyB9XG5cbiAgICAgICYuc21hbGwge1xuICAgICAgICBmb250LXNpemU6IDE0MCU7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAzNTBweDsgLy8gU2luZ2xlLWlucHV0IGFyZWFzIGNhbiBiZSBzb21ld2hhdCB3aWRlclxuICAgICAgfVxuICAgIH1cblxuICAgIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDVweDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cblxuICAgIGxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogNXB4O1xuICAgIH1cbiAgfVxuXG4gIC8vIFNoYXJlIGJ1dHRvbnNcbiAgLnJvdyB7IGRpc3BsYXk6IGZsZXg7IH0gLy8gQWxzbyB1c2VkIGJ5IHRoZSB0YWJsZSBnZW5lcmF0b3JcbiAgLnRhYmxlLWdlbmVyYXRvciB7IHBhZGRpbmc6IDVweDsgfVxuICAudGFibGUtZ2VuZXJhdG9yIC5yb3cgLmNlbGwge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgbWFyZ2luOiAxcHg7XG4gIH1cblxuICAuYnRuLXNoYXJlIHtcbiAgICAuZmxleC1idXR0b24tbWl4aW4oQHNpemUtc2hhcmUtYnV0dG9ucyk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblxuICAgICYuaHRtIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2h0bWw1LnN2ZycpO1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIC8qIFczQyBjb2xvciBjb2RlICovXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig3OCwgMTc1LCA4Nyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5wZGYge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvcGRmLnN2ZycpO1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIC8qIEFkb2JlIHJlYWRlciBQREYgY29sb3IgY29kZSAqL1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKHJnYigyNTMsIDQ4LCAyNiksIDEwJSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5kb2N4IHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2RvY3guc3ZnJyk7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgLyogTVMgV29yZCBjb2xvciBjb2RlICovXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4ocmdiKDQ1LCA4OCwgMTUxKSwgMTAlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLm9kdCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9vZHQuc3ZnJyk7XG4gICAgfVxuXG4gICAgJi5vZHQsICYudGV4LCAmLnBsYWluIHtcbiAgICAgIGNvbG9yOiByZ2JhKDIwLCAyMCwgMjAsIDEpO1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMSk7IGNvbG9yOmJsYWNrOyB9XG4gICAgfVxuXG4gICAgJi5yZXZlYWxqcyB7XG4gICAgICBjb2xvcjogcmdiYSgxMjAsIDEyMCwgMTIwLCAxKTtcbiAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCA0MCwgIDQwLCAgNDAsIDEpOyBjb2xvcjogd2hpdGU7IH1cbiAgICB9XG5cbiAgICAvLyByZXZlYWxKUyB0aGVtZSBidXR0b25zXG4gICAgJi5yZXZlYWxqcy1iZWlnZSB7XG4gICAgICBjb2xvcjogIzMzMzMzMztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2YyZDM7XG4gICAgICAmOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCNmN2YyZDMsIDIwJSk7IGNvbG9yOiAjMzMzMzMzOyB9XG4gICAgfVxuICAgICYucmV2ZWFsanMtYmxhY2sge1xuICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyMjIyO1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oIzIyMjIyMiwgMjAlKTsgY29sb3I6ICNmZmZmZmY7IH1cbiAgICB9XG4gICAgJi5yZXZlYWxqcy1sZWFndWUge1xuICAgICAgY29sb3I6ICM3MWU5ZjQ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1YTVmO1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oIzU1NWE1ZiwgMjAlKTsgY29sb3I6IGxpZ2h0ZW4oIzcxZTlmNCwgMjAlKTsgfVxuICAgIH1cbiAgICAmLnJldmVhbGpzLW1vb24ge1xuICAgICAgY29sb3I6ICMyNjhiZDI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAyYjM2O1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oIzAwMmIzNiwgMjAlKTsgY29sb3I6IGxpZ2h0ZW4oIzI2OGJkMiwgMjAlKTsgfVxuICAgIH1cbiAgICAmLnJldmVhbGpzLXNlcmlmIHtcbiAgICAgIGNvbG9yOiAjMzgzZDNkO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjFlYjtcbiAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oI2YwZjFlYiwgMTAlKTsgY29sb3I6ICMzODNkM2Q7IH1cbiAgICB9XG4gICAgJi5yZXZlYWxqcy1za3kge1xuICAgICAgY29sb3I6ICMzMzMzMzM7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWRkOWU0O1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigjYWRkOWU0LCAxMCUpOyBjb2xvcjogIzMzMzMzMzsgfVxuICAgIH1cbiAgICAmLnJldmVhbGpzLXNvbGFyaXplZCB7XG4gICAgICBjb2xvcjogIzY1N2I4MztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZGY2ZTM7XG4gICAgICAmOmhvdmVyIHsgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCNmZGY2ZTMsIDEwJSk7IGNvbG9yOiAjNjU3YjgzOyB9XG4gICAgfVxuICAgICYucmV2ZWFsanMtd2hpdGUge1xuICAgICAgY29sb3I6ICMyMjIyMjI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4od2hpdGUsIDIwJSk7IGNvbG9yOiAjMjIyMjIyOyB9XG4gICAgfVxuICAgIC8vIEVORCByZXZlYWxKUyB0aGVtZSBidXR0b25zXG5cbiAgICAmLnJzdCB7XG4gICAgICBjb2xvcjogcmdiKDI4LCA3OCwgOTgpO1xuICAgICAgJjpob3ZlciB7IGNvbG9yOiB3aGl0ZTsgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI4LCA3OCwgOTgpOyB9IC8vIFRoaXMgaXMgbGl0ZXJhbGx5IHRoZSBmaXJzdCBjb2xvdXIgSSBmb3VuZCBvbiB0aGUgd2ViIGZvciByc3RcbiAgICB9XG5cbiAgICAmLnJ0ZiB7XG4gICAgICBjb2xvcjogcmdiKDIyMywgNTEsIDY4KTtcbiAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCA1MSwgNjgpOyBjb2xvcjogd2hpdGU7IH1cbiAgICB9XG5cbiAgICAmLm9yZyB7XG4gICAgICBjb2xvcjogbGlnaHRlbihyZ2IoMCwgNDIsIDUzKSwgMTAlKTtcbiAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgNDIsIDUzKTsgY29sb3I6IHdoaXRlOyB9XG4gICAgfVxuXG4gICAgJi50ZXh0YnVuZGxlIHtcbiAgICAgIGNvbG9yOiAjMDBiNThjO1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6ICMwMGI1OGM7IGNvbG9yOndoaXRlOyB9XG4gICAgfVxuXG4gICAgJi50ZXh0cGFjayB7XG4gICAgICBjb2xvcjogbGlnaHRlbigjMGIwMDgwLCAyMCUpO1xuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6ICMwYjAwODA7IGNvbG9yOiB3aGl0ZTsgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEZvciB0aGUgaWNvbiBzZWxlY3RvclxuICAuaWNvbi1ibG9jayB7XG4gICAgLmZsZXgtYnV0dG9uLW1peGluKEBzaXplLWljb24tYnV0dG9ucyk7XG4gICAgZm9udC1zaXplOiAxMHB4OyAvLyBUaGUgY2xhcml0eSBpY29ucyBhcmUgd2F5IHRvbyBiaWdcbiAgfVxuXG4gIC8vIFRoZSByZXZlYWxqcyB0aGVtZSBzZWxlY3RvcidzIHZpc2liaWxpdHlcbiAgI3JldmVhbC10aGVtZXMge1xuICAgIHRyYW5zaXRpb246IDAuMnMgaGVpZ2h0IGVhc2U7XG4gICAgaGVpZ2h0OiBAc2l6ZS1zaGFyZS1idXR0b25zICogMjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICYuaGlkZGVuIHsgaGVpZ2h0OiAwcHg7IH1cbiAgfVxuXG4gIC8vIEZvcm1hdHRpbmdcbiAgLmZvcm1hdHRpbmcge1xuICAgIGEge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiA1cHggMTBweDtcblxuICAgICAgJiNoZWFkZXItZm9ybWF0dGluZyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4IDBweDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzEsXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzIsXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzMsXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzQsXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzUsXG4gICAgICBzcGFuLm1hcmtkb3duSGVhZGluZzYge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwcHg7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG5cbiAgICAgIGNsci1pY29uIHtcbiAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgbWFyZ2luLXRvcDogLTRweDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE4cHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogLTRweDtcbiAgICAgIH1cblxuICAgICAgc3Bhbi5mbi1pY29uIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgLy8gTWFyZ2luIGxlZnQgKyByaWdodCBzaG91bGQgYmUgdGhlIHNhbWUgYXMgdGhlIHJpZ2h0IG1hcmdpbiBvZiBjbHItaWNvblxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG5cbiAgICAgICAgc3VwIHsgZm9udC1zaXplOiA1MCU7IH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAjaGVhZGVyLWZvcm1hdHRpbmcubWFya2Rvd25IZWFkaW5nMTo6YmVmb3JlIHsgY29udGVudDogXCJIMVwiOyB9XG4gICAgI2hlYWRlci1mb3JtYXR0aW5nLm1hcmtkb3duSGVhZGluZzI6OmJlZm9yZSB7IGNvbnRlbnQ6IFwiSDJcIjsgfVxuICAgICNoZWFkZXItZm9ybWF0dGluZy5tYXJrZG93bkhlYWRpbmczOjpiZWZvcmUgeyBjb250ZW50OiBcIkgzXCI7IH1cbiAgICAjaGVhZGVyLWZvcm1hdHRpbmcubWFya2Rvd25IZWFkaW5nNDo6YmVmb3JlIHsgY29udGVudDogXCJINFwiOyB9XG4gICAgI2hlYWRlci1mb3JtYXR0aW5nLm1hcmtkb3duSGVhZGluZzU6OmJlZm9yZSB7IGNvbnRlbnQ6IFwiSDVcIjsgfVxuICAgICNoZWFkZXItZm9ybWF0dGluZy5tYXJrZG93bkhlYWRpbmc2OjpiZWZvcmUgeyBjb250ZW50OiBcIkg2XCI7IH1cblxuICAgIGhyIHtcbiAgICAgIG1hcmdpbjogMTRweCAyMHB4O1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgfVxuICB9XG5cbiAgLy8gU0VBUkNIIFBPUFVQXG4gIC5zZWFyY2gge1xuICAgIHdpZHRoOiAzNTBweDsgLy8gTWFrZSB1c2Ugb2YgdGhlIGJpZ2dlciB3aWR0aFxuXG4gICAgLnJvdyB7IGRpc3BsYXk6IGZsZXg7IH1cbiAgICBpbnB1dCB7XG4gICAgICAvKiogZmxleCBsYXlvdXQgb2YgdGhlIHNlYXJjaCBwb3B1cDpcbiAgICAgICogNiA0XG4gICAgICAqIDYgMyAxXG4gICAgICAqL1xuICAgICAgZm9udC1zaXplOiAxMDAlO1xuICAgICAgZmxleDogMCA2IGF1dG87IC8vIDYwIHBlcmNlbnQgd2lkdGggLS0gc2V0IGZpcnN0IHBhcmFtIHRvIDAgZm9yIGFsaWdubWVudFxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgJjpmb2N1cyB7IG91dGxpbmU6IDA7IH1cblxuICAgICAgLy8gVXNlIG1vbm9zcGFjZWQgZm9udCBmb3IgcmVndWxhciBleHByZXNzaW9ucy5cbiAgICAgICYucmVnZXhwIHsgZm9udC1mYW1pbHk6IEBmb250LWNvZGU7IH1cbiAgICB9XG5cbiAgICBidXR0b24ge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBwYWRkaW5nOiA1cHggMnB4O1xuICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgb3V0bGluZTogMDtcblxuICAgICAgJiNzZWFyY2hOZXh0IHsgZmxleDogNCA0IGF1dG87IH0gLy8gNDAgcGVyY2VudCB3aWR0aFxuICAgICAgJiNyZXBsYWNlTmV4dCB7IGZsZXg6IDIgMiBhdXRvOyB9IC8vIDIwIHBlcmNlbnQgd2lkdGhcbiAgICAgICYjcmVwbGFjZUFsbCB7IGZsZXg6IDIgMiBhdXRvOyB9IC8vIDIwIHBlcmNlbnQgd2lkdGhcbiAgICB9XG4gIH1cblxuICAucG9tb2Rvcm8gcCB7IGZvbnQtc2l6ZTogMmVtOyB9XG5cbiAgLy8gRm9vdG5vdGUgZWRpdCBwb3B1cFxuICAuZm9vdG5vdGUtZWRpdCB7XG4gICAgdGV4dGFyZWEge1xuICAgICAgZm9udC1zaXplOiBAZm9udC1zaXplLWJhc2U7XG4gICAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIHdpZHRoOiAyNTBweDsgLy8gTWF4aW11bSB3aWR0aFxuXG4gICAgICAmOmZvY3VzIHsgb3V0bGluZTogMDsgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFdyaXRpbmcgdGFyZ2V0IHBvcHVwXG4gIC5zZXQtdGFyZ2V0IHtcbiAgICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogMTUwJTtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgICBwYWRkaW5nOiAwO1xuXG4gICAgICAvLyBSZW1vdmUgdGhlIHVwL2Rvd24gY291bnRlclxuICAgICAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgJjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNlbGVjdCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNDUlO1xuICAgICAgZm9udC1zaXplOiAxNTAlO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB9XG5cbiAgICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMjIlO1xuICAgICAgZm9udC1zaXplOiAxNTAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICB9XG59XG4iLCIvLyBBdHRhY2htZW50IHBhbmVcblxuI2F0dGFjaG1lbnRzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiBAdG9vbGJhci1oZWlnaHQ7XG4gICAgcmlnaHQ6IC0yMCU7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgb3ZlcmZsb3cteTphdXRvO1xuICAgIG92ZXJmbG93LXg6aGlkZGVuO1xuXG4gICAgI29wZW4tZGlyLWV4dGVybmFsIHtcbiAgICAgICAgcGFkZGluZzogQGJ1dHRvbi1tYXJnaW47XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IEBib3JkZXItcmFkaXVzO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiBAYnV0dG9uLXNpemU7XG4gICAgICAgIGhlaWdodDogQGJ1dHRvbi1zaXplO1xuXG4gICAgICAgIGNsci1pY29uIHtcbiAgICAgICAgICAgIHdpZHRoOiBAYnV0dG9uLWljb24tc2l6ZTtcbiAgICAgICAgICAgIGhlaWdodDogQGJ1dHRvbi1pY29uLXNpemU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICAgIHBhZGRpbmc6MTBweDtcbiAgICAgICAgZm9udC1zaXplOkBmb250LXNpemUtYmlnO1xuICAgIH1cblxuICAgIHAgeyBwYWRkaW5nOjEwcHg7IH1cblxuICAgIGEuYXR0YWNobWVudCB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIG1hcmdpbjoxMHB4O1xuICAgICAgICBwYWRkaW5nOjRweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgIGNvbG9yOmluaGVyaXQ7XG4gICAgICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtMXB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gQmlibGlvZ3JhcGh5IGVudHJpZXNcbiAgICBkaXYuY3NsLWJpYi1ib2R5IHtcbiAgICAgIGRpdi5jc2wtZW50cnkge1xuICAgICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogc3F1YXJlO1xuICAgICAgICBtYXJnaW46IDFlbSAwLjJlbSAxZW0gMS44ZW07XG4gICAgICAgIGZvbnQtc2l6ZTogODAlO1xuICAgICAgfVxuICAgIH1cbn1cbiIsIi8vIElucHV0IHN0eWxpbmdcblxuLypcbiogQ0hFQ0tCT1hFU1xuKi9cblxuLy8gQXBwbHkgdGhpcyBjbGFzcyB0byBlbGVtZW50cyB0aGF0IHNob3VsZCByZXByZXNlbnQgdG9nZ2xlcyBpbnN0ZWFkIG9mXG4vLyByZWd1bGFyIGNoZWNrYm94ZXMuXG4uY2ItdG9nZ2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgd2lkdGg6IEBpbnB1dC1zaXplO1xuICBoZWlnaHQ6IEBpbnB1dC1zaXplIC8gMjtcbiAgbWFyZ2luOjAgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMDtcblxuICBpbnB1dCB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4gIC50b2dnbGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHRyYW5zaXRpb246IC40cztcbiAgICBib3JkZXItcmFkaXVzOiBAaW5wdXQtc2l6ZSAvIDMgLSBAaW5wdXQtbWFyZ2luO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDBweCAwcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIC4yNSk7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgaGVpZ2h0OiBAaW5wdXQtc2l6ZSAvIDIgLSBAaW5wdXQtbWFyZ2luICogMjsgLy8gRmFuY3kgZXF1YXRpb25zIGhlcmUhXG4gICAgICB3aWR0aDogQGlucHV0LXNpemUgLyAyIC0gQGlucHV0LW1hcmdpbiAqIDI7XG4gICAgICBib3gtc2hhZG93OiBAaW5wdXQtbWFyZ2luIEBpbnB1dC1tYXJnaW4gNXB4IDBweCByZ2JhKDAsIDAsIDAsIC41KTtcbiAgICAgIGxlZnQ6IEBpbnB1dC1tYXJnaW47XG4gICAgICBib3R0b206IEBpbnB1dC1tYXJnaW47XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIHRyYW5zaXRpb246IC40cztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG4gIH1cblxuICBpbnB1dDpjaGVja2VkICsgLnRvZ2dsZTpiZWZvcmUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoQGlucHV0LXNpemUgLyAyKTsgfVxufVxuXG4ucmFkaW8tdG9nZ2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgd2lkdGg6IEBpbnB1dC1zaXplIC8gMjtcbiAgaGVpZ2h0OiBAaW5wdXQtc2l6ZSAvIDI7XG4gIG1hcmdpbjowICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDA7XG5cbiAgaW5wdXQgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuICAudG9nZ2xlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBib3JkZXItcmFkaXVzOiBAaW5wdXQtc2l6ZSAvIDMgLSBAaW5wdXQtbWFyZ2luO1xuXG4gICAgLy8gSW5uZXIgcGFydFxuICAgICY6YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBoZWlnaHQ6IEBpbnB1dC1zaXplIC8gMiAtIEBpbnB1dC1tYXJnaW4gKiA0OyAvLyBGYW5jeSBlcXVhdGlvbnMgaGVyZSFcbiAgICAgIHdpZHRoOiBAaW5wdXQtc2l6ZSAvIDIgLSBAaW5wdXQtbWFyZ2luICogNDtcbiAgICAgIGxlZnQ6IEBpbnB1dC1tYXJnaW4gKiAyO1xuICAgICAgYm90dG9tOiBAaW5wdXQtbWFyZ2luICogMjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgdHJhbnNpdGlvbjogLjRzO1xuICAgIH1cbiAgfVxufVxuXG4vLyBUaGlzIGNsYXNzIGNhbiBiZSBhcHBsaWVkIHRvIHRoZSB3cmFwcGVyIGRpdiBvZiBhIGNoZWNrYm94LXRvZ2dsZSB0b1xuLy8gbWFrZSB0aGUgbGFiZWwgYW5kIHRoZSB0b2dnbGUgYWxpZ24gb24gdGhlIHNhbWUgbGV2ZWwuXG4uY2ItZ3JvdXAge1xuICBtYXJnaW46IDVweDtcbiAgJiA+IGxhYmVsIHsgbGluZS1oZWlnaHQ6IEBpbnB1dC1zaXplIC8gMiArIEBpbnB1dC1tYXJnaW4gKiAyOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICYgPiBpbnB1dFt0eXBlPVwicmFkaW9cIl0geyBtYXJnaW46MCAhaW1wb3J0YW50OyB9XG4gICYgPiAuY2ItdG9nZ2xlIHsgbWFyZ2luLXJpZ2h0OjAuMmVtOyB9XG59XG5cbi8qXG4gKiBTTElERVJTIC8gUkFOR0VTXG4gKi9cblxuIGlucHV0W3R5cGU9cmFuZ2VdIHtcbiAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICB3aWR0aDogMTAwJTtcblxuICAgJjpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH1cbiAgICY6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgICAgd2lkdGg6IDEwMCU7XG4gICAgIGhlaWdodDogQGlucHV0LXNpemUgLyAyO1xuICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgIGJvcmRlci1yYWRpdXM6IEBpbnB1dC1zaXplIC8gNCArIEBpbnB1dC1tYXJnaW47XG4gICAgIHBhZGRpbmc6IEBpbnB1dC1tYXJnaW47XG4gICAgIGJveC1zaGFkb3c6IGluc2V0IDBweCAwcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIC4yNSk7XG4gICB9XG5cbiAgICY6Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcbiAgICAgaGVpZ2h0OiBAaW5wdXQtc2l6ZSAvIDIgLSBAaW5wdXQtbWFyZ2luICogMjtcbiAgICAgd2lkdGg6IEBpbnB1dC1zaXplIC8gMiAtIEBpbnB1dC1tYXJnaW4gKiAyO1xuICAgICBib3JkZXItcmFkaXVzOiAxMDAlOyAvLyBSb3VuZCB0aHVtYlxuICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgbWFyZ2luLXRvcDogMHB4O1xuICAgICBib3gtc2hhZG93OiBAaW5wdXQtbWFyZ2luIEBpbnB1dC1tYXJnaW4gNXB4IDBweCByZ2JhKDAsIDAsIDAsIC41KTtcbiAgIH1cbn1cblxucHJvZ3Jlc3Mge1xuICBib3JkZXI6IDA7XG4gIGhlaWdodDogQGlucHV0LXNpemU7XG4gIGJvcmRlci1yYWRpdXM6IEBib3JkZXItcmFkaXVzO1xufVxuIiwiLyoqXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgdGhlIHdpbmRvdyBjb250cm9scyBmb3IgTGludXggYW5kIFdpbmRvd3MgcGFja2FnZXMuIFRoZXJlXG4gKiBhcmUgbm9uZSBmb3IgbWFjT1MsIGFzIHdlIGNhbiBtYWtlIHVzZSBvZiB0aGUgaGlkZGVuSW5zZXQgd2luZG93IHN0eWxlIHRvXG4gKiBkaXNwbGF5IHRoZSB0cmFmZmljIGxpZ2h0cyBldmVuIHdpdGggbm8gb3RoZXIgY2hyb21lIGFyb3VuZCB0aGUgd2luZG93LlxuICovXG5cbi8vIEhpZGUgYWxsIGNvbnRyb2xzIGluaXRpYWxseVxuLmxpbnV4LXdpbmRvdy1jb250cm9scyxcbi53aW5kb3dzLXdpbmRvdy1jb250cm9scyB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgZGlzcGxheTogbm9uZTtcbiAgLXdlYmtpdC1hcHAtcmVnaW9uOiBuby1kcmFnO1xufVxuXG4gYm9keS53aW4zMiB7XG4gICAud2luZG93cy13aW5kb3ctY29udHJvbHMge1xuICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICB0b3A6IDA7XG4gICAgIHJpZ2h0OiAwO1xuXG4gICAgIC5taW5pbWlzZSwgLnJlc2l6ZSwgLmNsb3NlIHtcbiAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICB3aWR0aDogNDVweDtcbiAgICAgICBoZWlnaHQ6IDMxcHg7XG4gICAgICAgbWFyZ2luOiAxcHggMXB4IDAgMDtcbiAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuMnM7XG5cbiAgICAgICBzdmcge1xuICAgICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7XG4gICAgICAgfVxuXG4gICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsgfVxuICAgICB9XG5cbiAgICAgLmNsb3NlIHtcbiAgICAgICBzdmcgcG9seWdvbiB7IHRyYW5zaXRpb246IGZpbGwgLjJzOyB9XG5cbiAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMyLCAxNywgMzUsIDAuOSk7XG4gICAgICAgICBzdmcgcG9seWdvbiB7IGZpbGw6ICNmZmZmZmY7IH1cbiAgICAgICB9XG4gICAgIH1cbiAgIH1cbn1cbiIsIi8qXG4qIFRoaXMgZmlsZSBjb250YWlucyB0aGVtZSBtb2NrdXAgc3R5bGVzLCBhcyB0aGV5IGFyZSByYXRoZXIgbGFyZ2UgYW5kIG5lZWRcbiogdGhlaXIgb3duIHNwYWNlLiBJdCBpbmNsdWRlcyBjb2xvdXJpbmcgdGFrZW4gZnJvbSB0aGUgdmFyaWFibGVzIG9mIHRoZVxuKiByZXNwZWN0aXZlIHRoZW1lcy5cbiovXG5cbmRpdi50aGVtZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIC8vIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICBkaXYudGhlbWUtY29udGFpbmVyLWl0ZW0geyBmbGV4OiAxOyB3aWR0aDogMjQwcHg7IHBhZGRpbmc6IDIwcHg7IH1cbn1cblxuZGl2LnRoZW1lLW1vY2t1cCB7XG4gIHdpZHRoOiAyMDBweDtcbiAgaGVpZ2h0OiAxNTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIC4xKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAwLjVzIGFsbCBlYXNlO1xuXG4gIC8vIE9uIGhvdmVyIHNjYWxlIHRoZW0gdXBcbiAgJjpob3ZlciB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAuNCk7XG4gIH1cblxuICAvKiBUcmFmZmljIGxpZ2h0cyAqL1xuICBkaXYudHJhZmZpYy1saWdodHMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDNweDtcbiAgICBsZWZ0OiAzcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMzAlO1xuICAgIGhlaWdodDogMTJweDtcbiAgICB6LWluZGV4OiA5OTk5O1xuXG4gICAgZGl2LnRyYWZmaWMtbGlnaHQtY2xvc2UsIGRpdi50cmFmZmljLWxpZ2h0LW1pbiwgZGl2LnRyYWZmaWMtbGlnaHQtZnVsbCB7XG4gICAgICB3aWR0aDogMTBweDtcbiAgICAgIGhlaWdodDogMTBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICBtYXJnaW46IDJweDtcbiAgICB9XG5cbiAgICAvLyBtYWNPUyB0cmFmZmljIGxpZ2h0IGNvbG91cnNcbiAgICBkaXYudHJhZmZpYy1saWdodC1jbG9zZSB7IGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDEwNywgOTYpOyB9XG4gICAgZGl2LnRyYWZmaWMtbGlnaHQtbWluICAgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ2LCAxOTEsIDgwKTsgfVxuICAgIGRpdi50cmFmZmljLWxpZ2h0LWZ1bGwgIHsgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwMSwgMjA0LCA4OCk7IH1cbiAgfVxuXG4gIC8vIFRvb2xiYXJcbiAgZGl2LnRvb2xiYXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDAsIDI0MCwgMjQwLCAxKTtcbiAgfVxuXG4gIC8vIEZpbGUgbGlzdFxuICBkaXYuZmlsZS1saXN0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIGJvdHRvbTowcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIHdpZHRoOiAzMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjIpO1xuXG4gICAgZGl2LmZpbGUtbGlzdC1pdGVtIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBmb250LXNpemU6IDVweDtcblxuICAgICAgLyogTm8gYm9yZGVyIG9uIHRoZSBsYXN0IGNoaWxkICovXG4gICAgICAmOmxhc3QtY2hpbGQgeyBib3JkZXItYm90dG9tOiBub25lOyB9XG4gICAgfVxuICB9XG5cbiAgLy8gRWRpdG9yXG4gIGRpdi5lZGl0b3Ige1xuICAgIHdpZHRoOiA3MCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAzMCU7XG4gICAgdG9wOiAwO1xuXG4gICAgcCB7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBtYXJnaW4tdG9wOiA1MCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG59XG5cbi8vIFRoZW1lLXNwZWNpZmljcyAoY29sb3VyaW5nIGFuZCBmb250KVxuI3RoZW1lLWJlcmxpbi1tb2NrdXAge1xuICAmLnRoZW1lLW1vY2t1cCB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoIDI4LCAxNzgsIDEyNiwgMSk7IH1cbiAgZGl2LmZpbGUtbGlzdCB7IGJvcmRlci1jb2xvcjogcmdiYSg4MCwgODAsIDgwLCAxKTsgfVxuICBkaXYuZWRpdG9yIHAgeyBjb2xvcjogd2hpdGU7IGZvbnQtZmFtaWx5OiBAZm9udC1sYXRvOyB9XG4gIGRpdi5maWxlLWxpc3QtaXRlbSB7IGJvcmRlci1jb2xvcjogcmdiYSg4MCwgODAsIDgwLCAxKTsgfVxufVxuXG4jdGhlbWUtZnJhbmtmdXJ0LW1vY2t1cCB7XG4gICYudGhlbWUtbW9ja3VwIHsgYmFja2dyb3VuZC1jb2xvcjogcmdiYSggMjksIDExNywgMTc5LCAxKTsgfVxuICBkaXYuZmlsZS1saXN0IHsgYm9yZGVyLWNvbG9yOiByZ2JhKDIwMCwgMjAwLCAyMDAsIDEpOyB9XG4gIGRpdi5lZGl0b3IgcCB7IGNvbG9yOiB3aGl0ZTsgZm9udC1mYW1pbHk6IEBmb250LWNyaW1zb247IH1cbiAgZGl2LmZpbGUtbGlzdC1pdGVtIHsgYm9yZGVyLWNvbG9yOiByZ2JhKDIwMCwgMjAwLCAyMDAsIDEpOyB9XG59XG5cbiN0aGVtZS1iaWVsZWZlbGQtbW9ja3VwIHtcbiAgJi50aGVtZS1tb2NrdXAgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyMjAsIDEpOyB9XG4gIGRpdi5maWxlLWxpc3QgeyBib3JkZXItY29sb3I6IHJnYmEoMTUwLCAxNTAsIDE1MCwgMSk7IH1cbiAgZGl2LmVkaXRvciBwIHsgY29sb3I6ICMzMzM7IGZvbnQtZmFtaWx5OiBAZm9udC1saWJlcmF0aW9uOyB9XG4gIGRpdi5maWxlLWxpc3QgZGl2LmZpbGUtbGlzdC1pdGVtIHsgYm9yZGVyLWNvbG9yOiByZ2JhKDE1MCwgMTUwLCAxNTAsIDEpOyB9XG59XG5cbiN0aGVtZS1rYXJsLW1hcngtc3RhZHQtbW9ja3VwIHtcbiAgJi50aGVtZS1tb2NrdXAgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyMCwgIDQ1LCAgNDUsIDEpOyB9XG4gIGRpdi5maWxlLWxpc3QgeyBib3JkZXItY29sb3I6IHJnYmEoMTUwLCAxNTAsIDE1MCwgMSk7IH1cbiAgZGl2LmVkaXRvciBwIHsgY29sb3I6ICNkZGQ7IGZvbnQtZmFtaWx5OiBAZm9udC1sYXRvOyB9XG4gIGRpdi5maWxlLWxpc3QgZGl2LmZpbGUtbGlzdC1pdGVtIHsgYm9yZGVyLWNvbG9yOiByZ2JhKDE1MCwgMTUwLCAxNTAsIDEpOyB9XG59XG5cbiN0aGVtZS1ib3JkZWF1eC1tb2NrdXAge1xuICAmLnRoZW1lLW1vY2t1cCB7IGJhY2tncm91bmQtY29sb3I6ICNmZmZmZjg7IH1cbiAgZGl2LmZpbGUtbGlzdCB7XG4gICAgYm9yZGVyLWNvbG9yOiAjNjU3YjgzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYWVhZWE7XG4gIH1cbiAgZGl2LmVkaXRvciBwIHsgY29sb3I6ICNkMDIzMjU7IGZvbnQtZmFtaWx5OiAnSW5jb25zb2xhdGEnLCBtb25vc3BhY2U7IH1cbiAgZGl2LmZpbGUtbGlzdCBkaXYuZmlsZS1saXN0LWl0ZW0geyBib3JkZXItY29sb3I6ICM2NTdiODM7IH1cbn1cbiJdfQ== */
